{
glyphname = "ja-khamti.locl";
layers = (
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1616,0);
},
{
name = top;
pos = (1616,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(427,-24,o),
(492,33,o),
(492,128,cs),
(492,338,o),
(220,524,o),
(220,771,cs),
(220,958,o),
(410,1097,o),
(660,1097,cs),
(944,1097,o),
(1105,882,o),
(1105,540,cs),
(1105,341,o),
(1036,147,o),
(896,26,c),
(914,24,l),
(847,105,o),
(809,221,o),
(809,345,cs),
(809,526,o),
(911,727,o),
(1089,829,c),
(1073,870,l),
(872,754,o),
(764,548,o),
(764,356,cs),
(764,173,o),
(844,21,o),
(906,-24,c),
(1068,103,o),
(1151,320,o),
(1151,540,cs),
(1151,910,o),
(972,1142,o),
(660,1142,cs),
(375,1142,o),
(174,990,o),
(174,773,cs),
(174,495,o),
(439,342,o),
(439,148,c),
(462,126,l),
(462,218,o),
(402,280,o),
(312,280,cs),
(224,280,o),
(162,217,o),
(162,128,cs),
(162,33,o),
(227,-24,o),
(327,-24,cs)
);
},
{
closed = 1;
nodes = (
(1930,-24,o),
(2126,201,o),
(2126,559,cs),
(2126,917,o),
(1930,1142,o),
(1616,1142,cs),
(1304,1142,o),
(1106,917,o),
(1106,559,cs),
(1106,201,o),
(1304,-24,o),
(1616,-24,cs)
);
},
{
closed = 1;
nodes = (
(1332,21,o),
(1152,229,o),
(1152,559,cs),
(1152,889,o),
(1332,1097,o),
(1616,1097,cs),
(1902,1097,o),
(2080,889,o),
(2080,559,cs),
(2080,229,o),
(1902,21,o),
(1616,21,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 1 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 6 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 4 97 8 7 6 3 4 4 38 77 0 1 1 4 97 8 7 6 3 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 1 6 6 38 77 0 1 1 4 97 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 7 2 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 5 2 97 0 2 2 37 77 0 0 0 3 97 0 3 3 37 77 0 9 9 8 97 0 8 8 38 77 7 1 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
109 107 103 102 99 98 97 96 83 81 56 54 50 48 42 40 36 34 10 8 24 
CALL[ ]	/* CallFunction */";
};
width = 2276;
},
{
anchors = (
{
name = bottom;
pos = (1129,0);
},
{
name = bottomright;
pos = (1542,0);
},
{
name = top;
pos = (1542,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(499,-24,o),
(581,74,o),
(581,213,cs),
(581,396,o),
(444,464,o),
(444,637,cs),
(444,752,o),
(537,828,o),
(695,828,cs),
(911,828,o),
(1016,708,o),
(1016,505,cs),
(1016,382,o),
(968,244,o),
(881,220,c),
(958,197,l),
(906,250,o),
(881,338,o),
(881,434,cs),
(881,563,o),
(927,704,o),
(1019,788,c),
(887,911,l),
(749,772,o),
(699,602,o),
(699,444,cs),
(699,233,o),
(788,44,o),
(881,-24,c),
(1140,9,o),
(1278,227,o),
(1278,540,cs),
(1278,910,o),
(1069,1142,o),
(696,1142,cs),
(361,1142,o),
(95,980,o),
(95,694,cs),
(95,454,o),
(254,388,o),
(254,305,c),
(467,359,l),
(424,408,o),
(362,439,o),
(292,439,cs),
(165,439,o),
(61,336,o),
(61,208,cs),
(61,72,o),
(164,-24,o),
(321,-24,cs)
);
},
{
closed = 1;
nodes = (
(1944,-24,o),
(2172,201,o),
(2172,559,cs),
(2172,917,o),
(1944,1142,o),
(1578,1142,cs),
(1222,1142,o),
(1016,929,o),
(1016,559,cs),
(1016,189,o),
(1222,-24,o),
(1578,-24,cs)
);
},
{
closed = 1;
nodes = (
(1406,296,o),
(1312,397,o),
(1312,559,cs),
(1312,721,o),
(1406,822,o),
(1558,822,cs),
(1710,822,o),
(1806,721,o),
(1806,559,cs),
(1806,397,o),
(1710,296,o),
(1558,296,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 1 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 6 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 4 97 8 7 6 3 4 4 38 77 0 1 1 4 97 8 7 6 3 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 1 6 6 38 77 0 1 1 4 97 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 7 2 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 5 2 97 0 2 2 37 77 0 0 0 3 97 0 3 3 37 77 0 9 9 8 97 0 8 8 38 77 7 1 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
109 107 103 102 99 98 97 96 83 81 56 54 50 48 42 40 36 34 10 8 24 
CALL[ ]	/* CallFunction */";
};
width = 2258;
},
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1582,0);
},
{
name = top;
pos = (1582,1118);
}
);
hints = (
{
horizontal = 1;
origin = (1,11);
target = (2,11);
type = Stem;
},
{
horizontal = 1;
origin = (1,5);
target = (2,5);
type = Stem;
},
{
origin = (0,37);
target = (0,5);
type = Stem;
},
{
origin = (0,25);
target = (0,18);
type = Stem;
},
{
origin = (0,11);
target = (2,2);
type = Stem;
},
{
origin = (2,8);
target = (1,2);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(457,-24,o),
(529,49,o),
(529,162,cs),
(529,361,o),
(324,510,o),
(324,727,cs),
(324,886,o),
(460,982,o),
(674,982,cs),
(907,982,o),
(1048,806,o),
(1048,526,cs),
(1048,357,o),
(995,187,o),
(877,105,c),
(933,102,l),
(857,159,o),
(803,288,o),
(803,414,cs),
(803,588,o),
(915,742,o),
(1074,788,c),
(976,881,l),
(794,817,o),
(666,628,o),
(666,424,cs),
(666,239,o),
(760,54,o),
(893,-24,c),
(1093,55,o),
(1207,283,o),
(1207,540,cs),
(1207,910,o),
(1001,1142,o),
(672,1142,cs),
(360,1142,o),
(150,992,o),
(150,741,cs),
(150,479,o),
(367,360,o),
(367,211,c),
(466,219,l),
(448,294,o),
(388,344,o),
(306,344,cs),
(202,344,o),
(123,265,o),
(123,160,cs),
(123,49,o),
(203,-24,o),
(326,-24,cs)
);
},
{
closed = 1;
nodes = (
(1936,-24,o),
(2146,201,o),
(2146,559,cs),
(2146,917,o),
(1936,1142,o),
(1597,1142,cs),
(1272,1142,o),
(1076,922,o),
(1076,559,cs),
(1076,196,o),
(1272,-24,o),
(1597,-24,cs)
);
},
{
closed = 1;
nodes = (
(1362,136,o),
(1222,296,o),
(1222,559,cs),
(1222,822,o),
(1362,982,o),
(1597,982,cs),
(1826,982,o),
(1972,822,o),
(1972,559,cs),
(1972,296,o),
(1826,136,o),
(1597,136,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 1 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 8 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
85 45 37 3 9 0 59 28 2 1 9 62 1 4 6 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 4 97 8 7 6 3 4 4 38 77 0 1 1 4 97 8 7 6 3 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 8 97 0 8 8 38 77 0 1 1 4 97 7 6 2 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
39 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 1 6 6 38 77 0 1 1 4 97 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 35 values pushed */
5 1 0 0 2 97 3 1 2 2 37 77 0 9 9 6 97 8 7 2 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 47 values pushed */
0 5 5 2 97 0 2 2 37 77 0 0 0 3 97 0 3 3 37 77 0 9 9 8 97 0 8 8 38 77 7 1 6 6 38 77 0 1 1 4 97 0 4 4 38 4 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
109 107 103 102 99 98 97 96 83 81 56 54 50 48 42 40 36 34 10 8 24 
CALL[ ]	/* CallFunction */";
};
width = 2272;
}
);
note = uniAA63.locl;
}
