{
glyphname = "qn-khamti.locl";
layers = (
{
anchors = (
{
name = bottom;
pos = (621,0);
},
{
name = bottomright;
pos = (678,0);
},
{
name = hamedial;
pos = (763,0);
},
{
name = top;
pos = (1156,1118);
},
{
name = wamedial;
pos = (664,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(427,-24,o),
(492,33,o),
(492,128,cs),
(492,338,o),
(220,524,o),
(220,771,cs),
(220,971,o),
(392,1097,o),
(615,1097,cs),
(945,1097,o),
(1100,897,o),
(1100,539,cs),
(1100,334,o),
(1007,133,o),
(854,7,c),
(887,-24,l),
(1046,104,o),
(1146,322,o),
(1146,539,cs),
(1146,641,o),
(1132,729,o),
(1107,806,c),
(1105,745,l),
(1165,959,o),
(1325,1097,o),
(1526,1097,cs),
(1801,1097,o),
(1970,895,o),
(1970,559,cs),
(1970,229,o),
(1791,21,o),
(1507,21,cs),
(1455,21,o),
(1404,30,o),
(1356,48,c),
(1342,5,l),
(1394,-14,o),
(1450,-24,o),
(1507,-24,cs),
(1820,-24,o),
(2016,201,o),
(2016,558,cs),
(2016,917,o),
(1830,1142,o),
(1526,1142,cs),
(1321,1142,o),
(1155,1014,o),
(1081,809,c),
(1107,809,l),
(1037,1020,o),
(885,1142,o),
(615,1142,cs),
(364,1142,o),
(174,1000,o),
(174,773,cs),
(174,495,o),
(439,342,o),
(439,148,c),
(462,126,l),
(462,218,o),
(402,280,o),
(312,280,cs),
(224,280,o),
(162,217,o),
(162,128,cs),
(162,33,o),
(227,-24,o),
(327,-24,cs)
);
},
{
closed = 1;
nodes = (
(1537,-888,o),
(1648,-777,o),
(1648,-618,cs),
(1648,13,l),
(1603,13,l),
(1603,-505,l),
(1617,-485,l),
(1573,-400,o),
(1483,-348,o),
(1379,-348,cs),
(1220,-348,o),
(1108,-459,o),
(1108,-618,cs),
(1108,-777,o),
(1220,-888,o),
(1379,-888,cs)
);
},
{
closed = 1;
nodes = (
(1245,-844,o),
(1152,-751,o),
(1152,-618,cs),
(1152,-485,o),
(1245,-392,o),
(1378,-392,cs),
(1511,-392,o),
(1604,-485,o),
(1604,-618,cs),
(1604,-751,o),
(1511,-844,o),
(1378,-844,cs)
);
},
{
closed = 1;
nodes = (
(2225,-888,o),
(2340,-784,o),
(2340,-618,cs),
(2340,793,ls),
(2340,1173,o),
(1771,1307,o),
(1771,1666,cs),
(1771,1836,o),
(1892,1944,o),
(2086,1944,cs),
(2192,1944,o),
(2299,1907,o),
(2364,1849,c),
(2389,1881,l),
(2320,1944,o),
(2203,1984,o),
(2087,1984,cs),
(1868,1984,o),
(1731,1861,o),
(1731,1664,cs),
(1731,1285,o),
(2294,1152,o),
(2294,795,cs),
(2294,-618,ls),
(2294,-756,o),
(2199,-843,o),
(2047,-843,cs),
(1907,-843,o),
(1740,-743,o),
(1635,-529,c),
(1616,-574,l),
(1703,-762,o),
(1863,-888,o),
(2059,-888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
43 1 2 3 178 133 117 3 11 7 95 19 2 9 6 93 86 28 20 11 5 0 5 76 62 2 4 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
43 1 2 3 178 133 117 3 11 7 19 1 10 6 95 1 9 10 93 86 28 20 11 5 0 5 76 62 2 4 0 6 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 12 3 2 12 128 0 6 11 9 11 6 9 128 0 5 9 0 9 5 0 128 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 9 97 10 1 9 9 38 77 0 0 0 4 97 0 4 4 40 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 2 3 12 3 2 12 128 0 6 11 10 11 6 10 128 0 5 9 0 9 5 0 128 0 0 0 4 0 4 101 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 10 97 0 10 10 38 77 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
183 181 176 174 156 154 150 147 146 143 131 129 113 111 101 100 91 90 70 69 49 48 46 44 41 39 26 25 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 2510;
},
{
anchors = (
{
name = bottom;
pos = (641,0);
},
{
name = bottomright;
pos = (698,0);
},
{
name = hamedial;
pos = (733,0);
},
{
name = top;
pos = (1300,1118);
},
{
name = wamedial;
pos = (634,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(499,-24,o),
(581,74,o),
(581,213,cs),
(581,396,o),
(444,464,o),
(444,637,cs),
(444,751,o),
(529,822,o),
(665,822,cs),
(831,822,o),
(936,712,o),
(936,537,cs),
(936,380,o),
(878,245,o),
(785,186,c),
(1012,-24,l),
(1190,74,o),
(1302,291,o),
(1302,538,cs),
(1302,592,o),
(1297,644,o),
(1287,692,c),
(1268,623,l),
(1311,745,o),
(1422,822,o),
(1556,822,cs),
(1710,822,o),
(1806,714,o),
(1806,542,cs),
(1806,408,o),
(1748,265,o),
(1567,265,cs),
(1533,265,o),
(1489,272,o),
(1455,284,c),
(1385,18,l),
(1447,-8,o),
(1538,-24,o),
(1634,-24,cs),
(1964,-24,o),
(2172,197,o),
(2172,548,cs),
(2172,905,o),
(1954,1142,o),
(1605,1142,cs),
(1335,1142,o),
(1121,1013,o),
(1048,801,c),
(1252,801,l),
(1165,1012,o),
(973,1142,o),
(671,1142,cs),
(336,1142,o),
(95,980,o),
(95,694,cs),
(95,454,o),
(254,388,o),
(254,305,c),
(467,359,l),
(424,408,o),
(362,439,o),
(292,439,cs),
(165,439,o),
(61,336,o),
(61,208,cs),
(61,72,o),
(164,-24,o),
(321,-24,cs)
);
},
{
closed = 1;
nodes = (
(1740,-888,o),
(1889,-739,o),
(1889,-526,cs),
(1889,120,l),
(1559,120,l),
(1559,-184,l),
(1657,-184,l),
(1617,-171,o),
(1573,-163,o),
(1527,-163,cs),
(1314,-163,o),
(1165,-313,o),
(1165,-526,cs),
(1165,-739,o),
(1314,-888,o),
(1527,-888,cs)
);
},
{
closed = 1;
nodes = (
(1442,-662,o),
(1389,-609,o),
(1389,-526,cs),
(1389,-441,o),
(1442,-389,o),
(1526,-389,cs),
(1609,-389,o),
(1662,-441,o),
(1662,-526,cs),
(1662,-609,o),
(1609,-662,o),
(1526,-662,cs)
);
},
{
closed = 1;
nodes = (
(2535,-888,o),
(2680,-686,o),
(2680,-381,cs),
(2680,813,ls),
(2680,1347,o),
(2222,1388,o),
(2222,1597,cs),
(2222,1689,o),
(2306,1738,o),
(2405,1738,cs),
(2485,1738,o),
(2574,1710,o),
(2638,1645,c),
(2774,1821,l),
(2688,1921,o),
(2516,1984,o),
(2327,1984,cs),
(2054,1984,o),
(1883,1835,o),
(1883,1611,cs),
(1883,1214,o),
(2340,1157,o),
(2340,800,cs),
(2340,-376,ls),
(2340,-524,o),
(2327,-615,o),
(2195,-615,cs),
(2062,-615,o),
(1939,-495,o),
(1834,-281,c),
(1655,-439,l),
(1799,-727,o),
(2043,-888,o),
(2237,-888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
43 1 2 3 178 133 117 3 11 7 95 19 2 9 6 93 86 28 20 11 5 0 5 76 62 2 4 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
43 1 2 3 178 133 117 3 11 7 19 1 10 6 95 1 9 10 93 86 28 20 11 5 0 5 76 62 2 4 0 6 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 12 3 2 12 128 0 6 11 9 11 6 9 128 0 5 9 0 9 5 0 128 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 9 97 10 1 9 9 38 77 0 0 0 4 97 0 4 4 40 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 2 3 12 3 2 12 128 0 6 11 10 11 6 10 128 0 5 9 0 9 5 0 128 0 0 0 4 0 4 101 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 10 97 0 10 10 38 77 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
183 181 176 174 156 154 150 147 146 143 131 129 113 111 101 100 91 90 70 69 49 48 46 44 41 39 26 25 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 2806;
},
{
anchors = (
{
name = bottom;
pos = (621,0);
},
{
name = bottomright;
pos = (678,0);
},
{
name = hamedial;
pos = (703,0);
},
{
name = top;
pos = (1230,1118);
},
{
name = wamedial;
pos = (629,0);
}
);
hints = (
{
horizontal = 1;
origin = (3,33);
target = (3,26);
type = Stem;
},
{
horizontal = 1;
origin = (2,5);
target = (1,9);
type = Stem;
},
{
horizontal = 1;
origin = (0,67);
target = (0,31);
type = Stem;
},
{
horizontal = 1;
origin = (0,51);
target = (0,25);
type = Stem;
},
{
horizontal = 1;
origin = (3,16);
target = (3,9);
type = Stem;
},
{
horizontal = 1;
origin = (3,33);
target = (2,11);
type = Stem;
},
{
horizontal = 1;
origin = (0,41,1,3);
target = up;
type = BottomGhost;
},
{
origin = (0,54);
target = (0,5);
type = Stem;
},
{
origin = (0,11);
target = (0,18);
type = Stem;
},
{
origin = (1,5);
target = (1,3);
type = Stem;
},
{
origin = (0,28);
target = (0,41);
type = Stem;
},
{
origin = (3,23);
target = (3,3);
type = Stem;
},
{
origin = (3,19);
target = (3,6);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(457,-24,o),
(529,49,o),
(529,162,cs),
(529,361,o),
(315,510,o),
(315,727,cs),
(315,886,o),
(439,982,o),
(653,982,cs),
(930,982,o),
(1071,823,o),
(1071,538,cs),
(1071,352,o),
(989,178,o),
(854,79,c),
(964,-24,l),
(1137,92,o),
(1245,310,o),
(1245,539,cs),
(1245,619,o),
(1235,693,o),
(1214,760,c),
(1205,696,l),
(1261,873,o),
(1407,982,o),
(1589,982,cs),
(1826,982,o),
(1972,823,o),
(1972,552,cs),
(1972,301,o),
(1834,122,o),
(1581,122,cs),
(1534,122,o),
(1484,130,o),
(1440,145,c),
(1403,10,l),
(1461,-12,o),
(1533,-24,o),
(1607,-24,cs),
(1938,-24,o),
(2146,199,o),
(2146,554,cs),
(2146,912,o),
(1941,1142,o),
(1608,1142,cs),
(1370,1142,o),
(1179,1013,o),
(1103,806,c),
(1201,806,l),
(1121,1018,o),
(929,1142,o),
(637,1142,cs),
(325,1142,o),
(141,992,o),
(141,741,cs),
(141,479,o),
(367,360,o),
(367,211,c),
(466,219,l),
(448,294,o),
(388,344,o),
(306,344,cs),
(202,344,o),
(123,265,o),
(123,160,cs),
(123,49,o),
(203,-24,o),
(326,-24,cs)
);
},
{
closed = 1;
nodes = (
(1631,-888,o),
(1757,-767,o),
(1757,-595,cs),
(1757,57,l),
(1593,57,l),
(1593,-410,l),
(1643,-398,l),
(1604,-345,o),
(1523,-308,o),
(1447,-308,cs),
(1277,-308,o),
(1157,-428,o),
(1157,-598,cs),
(1157,-768,o),
(1279,-888,o),
(1453,-888,cs)
);
},
{
closed = 1;
nodes = (
(1361,-762,o),
(1293,-694,o),
(1293,-598,cs),
(1293,-502,o),
(1361,-434,o),
(1457,-434,cs),
(1553,-434,o),
(1621,-502,o),
(1621,-598,cs),
(1621,-694,o),
(1553,-762,o),
(1457,-762,cs)
);
},
{
closed = 1;
nodes = (
(2367,-888,o),
(2502,-745,o),
(2502,-523,cs),
(2502,801,ls),
(2502,1243,o),
(1979,1348,o),
(1979,1644,cs),
(1979,1767,o),
(2081,1844,o),
(2244,1844,cs),
(2332,1844,o),
(2419,1816,o),
(2471,1771,c),
(2552,1877,l),
(2474,1943,o),
(2348,1984,o),
(2225,1984,cs),
(1974,1984,o),
(1817,1855,o),
(1817,1649,cs),
(1817,1256,o),
(2330,1154,o),
(2330,797,cs),
(2330,-549,ls),
(2330,-672,o),
(2259,-739,o),
(2132,-739,cs),
(1989,-739,o),
(1834,-637,o),
(1731,-428,c),
(1657,-530,l),
(1767,-758,o),
(1939,-888,o),
(2156,-888,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 30 values pushed */
43 1 2 3 178 133 117 3 11 7 95 19 2 9 6 93 86 28 20 11 5 0 5 76 62 2 4 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 33 values pushed */
43 1 2 3 178 133 117 3 11 7 19 1 10 6 95 1 9 10 93 86 28 20 11 5 0 5 76 62 2 4 0 6 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 68 values pushed */
0 2 3 12 3 2 12 128 0 6 11 9 11 6 9 128 0 5 9 0 9 5 0 128 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 9 97 10 1 9 9 38 77 0 0 0 4 97 0 4 4 40 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 69 values pushed */
0 2 3 12 3 2 12 128 0 6 11 10 11 6 10 128 0 5 9 0 9 5 0 128 0 0 0 4 0 4 101 0 3 3 1 97 0 1 1 39 77 8 1 7 7 12 97 13 1 12 12 37 77 0 11 11 10 97 0 10 10 38 77 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 31 values pushed */
183 181 176 174 156 154 150 147 146 143 131 129 113 111 101 100 91 90 70 69 49 48 46 44 41 39 26 25 14 8 22 
CALL[ ]	/* CallFunction */";
};
width = 2656;
}
);
note = uniAA75.locl;
}
