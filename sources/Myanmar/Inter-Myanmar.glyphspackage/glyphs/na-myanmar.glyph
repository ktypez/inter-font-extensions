{
glyphname = "na-myanmar";
layers = (
{
anchors = (
{
name = dotbelow;
pos = (962,0);
},
{
name = top;
pos = (639,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(643,-888,l),
(643,14,l),
(632,0,l),
(913,14,o),
(1095,121,o),
(1095,308,cs),
(1095,497,o),
(882,565,o),
(674,631,cs),
(482,692,o),
(291,758,o),
(291,898,cs),
(291,1020,o),
(438,1097,o),
(637,1097,cs),
(823,1097,o),
(949,1027,o),
(1017,888,c),
(1058,908,l),
(984,1061,o),
(839,1142,o),
(636,1142,cs),
(410,1142,o),
(246,1048,o),
(246,898,cs),
(246,721,o),
(451,654,o),
(660,587,cs),
(850,526,o),
(1049,461,o),
(1049,308,cs),
(1049,157,o),
(899,62,o),
(639,45,c),
(621,295,o),
(493,434,o),
(311,434,cs),
(182,434,o),
(90,364,o),
(90,253,cs),
(90,86,o),
(311,0,o),
(610,0,c),
(597,14,l),
(597,-888,l)
);
},
{
closed = 1;
nodes = (
(366,45,o),
(136,108,o),
(136,253,cs),
(136,337,o),
(210,390,o),
(311,390,cs),
(473,390,o),
(578,266,o),
(597,45,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
39 0 2 3 7 6 1 1 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
39 0 2 3 7 6 1 1 8 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 6 2 6 5 2 128 0 2 0 7 3 2 7 105 0 6 6 4 97 0 4 4 37 77 9 8 2 3 3 1 97 0 1 1 38 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 3 7 8 7 3 8 128 0 2 0 7 3 2 7 105 0 6 6 4 97 0 4 4 37 77 9 1 8 8 1 97 0 1 1 38 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
79 79 79 98 79 97 88 87 67 65 63 62 55 53 24 41 35 40 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1260;
},
{
anchors = (
{
name = dotbelow;
pos = (1061,0);
},
{
name = top;
pos = (652,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(713,-888,l),
(713,45,l),
(665,-11,l),
(933,3,o),
(1091,146,o),
(1091,365,cs),
(1091,579,o),
(943,655,o),
(759,717,cs),
(702,736,o),
(571,782,o),
(571,843,cs),
(571,884,o),
(611,905,o),
(675,905,cs),
(751,905,o),
(839,864,o),
(894,803,c),
(1077,908,l),
(1015,1053,o),
(853,1142,o),
(651,1142,cs),
(400,1142,o),
(227,1027,o),
(227,845,cs),
(227,698,o),
(313,603,o),
(523,523,cs),
(660,471,o),
(756,419,o),
(756,343,cs),
(756,286,o),
(730,247,o),
(677,227,c),
(668,374,o),
(539,494,o),
(345,494,cs),
(166,494,o),
(54,404,o),
(54,261,cs),
(54,104,o),
(206,-11,o),
(444,-11,c),
(393,45,l),
(393,-888,l)
);
},
{
closed = 1;
nodes = (
(315,211,o),
(263,242,o),
(263,286,cs),
(263,319,o),
(283,339,o),
(315,339,cs),
(359,339,o),
(391,288,o),
(397,207,c)
);
}
);
width = 1197;
},
{
anchors = (
{
name = dotbelow;
pos = (1002,0);
},
{
name = top;
pos = (658,1118);
}
);
hints = (
{
horizontal = 1;
origin = (0,42);
target = (1,8);
type = Stem;
},
{
horizontal = 1;
origin = (1,5);
target = (0,36);
type = Stem;
},
{
horizontal = 1;
origin = (0,21);
target = (0,14);
type = Stem;
},
{
origin = (0,39);
target = (1,2);
type = Stem;
},
{
origin = (0,44);
target = (0,1);
type = Stem;
},
{
origin = (0,30);
target = (0,5);
type = Stem;
},
{
origin = (0,24);
target = (0,11);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(677,-888,l),
(677,26,l),
(647,0,l),
(923,14,o),
(1095,131,o),
(1095,331,cs),
(1095,537,o),
(907,617,o),
(710,677,cs),
(572,719,o),
(416,776,o),
(416,876,cs),
(416,948,o),
(507,994,o),
(649,994,cs),
(788,994,o),
(881,950,o),
(939,857,c),
(1071,908,l),
(1017,1052,o),
(858,1142,o),
(645,1142,cs),
(410,1142,o),
(240,1036,o),
(240,877,cs),
(240,714,o),
(397,623,o),
(607,552,cs),
(776,495,o),
(919,444,o),
(919,322,cs),
(919,239,o),
(848,154,o),
(671,136,c),
(656,345,o),
(513,468,o),
(326,468,cs),
(173,468,o),
(77,386,o),
(77,256,cs),
(77,99,o),
(258,0,o),
(545,0,c),
(513,26,l),
(513,-888,l)
);
},
{
closed = 1;
nodes = (
(340,134,o),
(217,185,o),
(217,262,cs),
(217,307,o),
(257,338,o),
(314,338,cs),
(419,338,o),
(497,253,o),
(507,128,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 11 values pushed */
39 0 2 3 7 6 1 1 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 11 values pushed */
39 0 2 3 7 6 1 1 8 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 5 6 2 6 5 2 128 0 2 0 7 3 2 7 105 0 6 6 4 97 0 4 4 37 77 9 8 2 3 3 1 97 0 1 1 38 77 0 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 5 6 2 6 5 2 128 0 3 7 8 7 3 8 128 0 2 0 7 3 2 7 105 0 6 6 4 97 0 4 4 37 77 9 1 8 8 1 97 0 1 1 38 77 0 0 0 40 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 21 values pushed */
79 79 79 98 79 97 88 87 67 65 63 62 55 53 24 41 35 40 10 8 26 
CALL[ ]	/* CallFunction */";
};
width = 1243;
}
);
note = uni1014;
unicode = 4116;
}
