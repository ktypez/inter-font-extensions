{
glyphname = "llVocalicMark-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottomright;
pos = (-660,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-730,-888,o),
(-671,-848,o),
(-633,-777,c),
(-677,-777,l),
(-639,-848,o),
(-580,-888,o),
(-511,-888,cs),
(-407,-888,o),
(-333,-805,o),
(-307,-667,c),
(-346,-657,l),
(-367,-778,o),
(-426,-848,o),
(-510,-848,cs),
(-590,-848,o),
(-636,-796,o),
(-636,-708,c),
(-674,-708,l),
(-674,-796,o),
(-720,-848,o),
(-800,-848,cs),
(-906,-848,o),
(-973,-734,o),
(-973,-550,cs),
(-973,-357,o),
(-846,-226,o),
(-651,-226,cs),
(-510,-226,o),
(-386,-299,o),
(-355,-460,c),
(-345,-431,l),
(-389,-461,o),
(-472,-477,o),
(-568,-477,cs),
(-678,-477,o),
(-808,-443,o),
(-912,-324,c),
(-938,-350,l),
(-834,-474,o),
(-692,-517,o),
(-569,-517,cs),
(-441,-517,o),
(-335,-477,o),
(-317,-462,c),
(-338,-301,o),
(-463,-186,o),
(-651,-186,cs),
(-872,-186,o),
(-1013,-331,o),
(-1013,-550,cs),
(-1013,-758,o),
(-930,-888,o),
(-799,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
61 16 9 3 6 7 19 1 1 6 41 1 2 1 51 1 4 2 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 4 4 2 89 3 1 2 2 4 97 5 1 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 0 4 5 2 4 105 3 1 2 2 5 97 0 5 2 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 20 35 36 29 26 40 39 34 9 8 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottomright;
pos = (-694,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-763,-888,o),
(-685,-855,o),
(-633,-766,c),
(-711,-766,l),
(-659,-855,o),
(-581,-888,o),
(-508,-888,cs),
(-354,-888,o),
(-293,-743,o),
(-293,-620,c),
(-489,-620,l),
(-489,-673,o),
(-519,-692,o),
(-549,-692,cs),
(-575,-692,o),
(-600,-677,o),
(-600,-620,c),
(-743,-620,l),
(-743,-677,o),
(-759,-692,o),
(-785,-692,cs),
(-817,-692,o),
(-854,-651,o),
(-854,-507,cs),
(-854,-377,o),
(-771,-288,o),
(-655,-288,cs),
(-568,-288,o),
(-501,-335,o),
(-482,-410,c),
(-470,-363,l),
(-507,-387,o),
(-564,-402,o),
(-625,-402,cs),
(-705,-402,o),
(-792,-376,o),
(-854,-311,c),
(-934,-383,l),
(-866,-464,o),
(-735,-516,o),
(-593,-516,cs),
(-463,-516,o),
(-353,-465,o),
(-297,-420,c),
(-321,-247,o),
(-443,-122,o),
(-679,-122,cs),
(-981,-122,o),
(-1095,-325,o),
(-1095,-522,cs),
(-1095,-746,o),
(-995,-888,o),
(-836,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
61 16 9 3 6 7 19 1 1 6 41 1 2 1 51 1 4 2 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 4 4 2 89 3 1 2 2 4 97 5 1 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 0 4 5 2 4 105 3 1 2 2 5 97 0 5 2 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 20 35 36 29 26 40 39 34 9 8 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
},
{
anchors = (
{
name = _bottomright;
pos = (-675,0);
}
);
hints = (
{
horizontal = 1;
origin = (0,52);
target = (0,20);
type = Stem;
},
{
horizontal = 1;
origin = (0,40);
target = (0,33);
type = Stem;
},
{
horizontal = 1;
origin = (0,26);
target = (0,46);
type = Stem;
},
{
horizontal = 1;
origin = (0,2,0,6);
target = (0,17);
type = Stem;
},
{
horizontal = 1;
origin = (0,6);
target = (0,20);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-735,-888,o),
(-647,-844,o),
(-607,-773,c),
(-701,-773,l),
(-676,-837,o),
(-597,-887,o),
(-518,-887,cs),
(-429,-887,o),
(-331,-823,o),
(-318,-647,c),
(-439,-639,l),
(-439,-711,o),
(-473,-756,o),
(-528,-756,cs),
(-575,-756,o),
(-604,-724,o),
(-604,-673,c),
(-704,-673,l),
(-704,-724,o),
(-736,-756,o),
(-786,-756,cs),
(-855,-756,o),
(-898,-675,o),
(-898,-547,cs),
(-898,-421,o),
(-815,-284,o),
(-644,-284,cs),
(-539,-284,o),
(-451,-352,o),
(-431,-448,c),
(-391,-383,l),
(-432,-408,o),
(-508,-425,o),
(-574,-425,cs),
(-677,-425,o),
(-818,-373,o),
(-887,-299,c),
(-944,-382,l),
(-874,-465,o),
(-703,-523,o),
(-558,-523,cs),
(-464,-523,o),
(-361,-494,o),
(-309,-453,c),
(-331,-283,o),
(-473,-164,o),
(-654,-164,cs),
(-913,-164,o),
(-1038,-360,o),
(-1038,-547,cs),
(-1038,-756,o),
(-949,-888,o),
(-806,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 20 values pushed */
61 16 9 3 6 7 19 1 1 6 41 1 2 1 51 1 4 2 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
31 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 36 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 4 4 2 89 3 1 2 2 4 97 5 1 4 2 4 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
0 0 8 1 7 6 0 7 105 0 6 0 1 2 6 1 105 3 1 2 0 4 5 2 4 105 3 1 2 2 5 97 0 5 2 5 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
17 20 35 36 29 26 40 39 34 9 8 31 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 0;
}
);
note = uni1059;
}
