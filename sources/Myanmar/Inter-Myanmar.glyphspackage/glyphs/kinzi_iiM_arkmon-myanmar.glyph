{
category = Mark;
glyphname = "kinzi_iiMarkmon-myanmar";
layers = (
{
anchors = (
{
name = _top;
pos = (-660,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-1075,1631,l),
(-1133,1657,o),
(-1168,1716,o),
(-1168,1783,cs),
(-1168,1881,o),
(-1093,1945,o),
(-969,1945,cs),
(-891,1945,o),
(-818,1918,o),
(-774,1876,c),
(-764,1913,l),
(-821,1959,o),
(-891,1984,o),
(-972,1984,cs),
(-1116,1984,o),
(-1208,1905,o),
(-1208,1784,cs),
(-1208,1707,o),
(-1171,1641,o),
(-1110,1609,c)
);
},
{
closed = 1;
nodes = (
(-902,1240,o),
(-810,1268,o),
(-770,1306,c),
(-780,1344,l),
(-839,1304,o),
(-919,1280,o),
(-993,1280,cs),
(-1114,1280,o),
(-1188,1345,o),
(-1188,1451,cs),
(-1188,1557,o),
(-1114,1622,o),
(-993,1622,cs),
(-919,1622,o),
(-839,1598,o),
(-780,1558,c),
(-770,1596,l),
(-810,1634,o),
(-902,1662,o),
(-990,1662,cs),
(-1138,1662,o),
(-1227,1583,o),
(-1227,1451,cs),
(-1227,1319,o),
(-1138,1240,o),
(-990,1240,cs)
);
},
{
closed = 1;
nodes = (
(-217,1240,o),
(-97,1384,o),
(-97,1590,cs),
(-97,1796,o),
(-217,1940,o),
(-417,1940,cs),
(-617,1940,o),
(-737,1796,o),
(-737,1590,cs),
(-737,1384,o),
(-617,1240,o),
(-417,1240,cs)
);
},
{
closed = 1;
nodes = (
(-591,1282,o),
(-693,1409,o),
(-693,1590,cs),
(-693,1771,o),
(-591,1898,o),
(-417,1898,cs),
(-243,1898,o),
(-141,1771,o),
(-141,1590,cs),
(-141,1409,o),
(-243,1282,o),
(-417,1282,cs)
);
},
{
closed = 1;
nodes = (
(-344,1457,o),
(-293,1512,o),
(-293,1591,cs),
(-293,1670,o),
(-344,1725,o),
(-417,1725,cs),
(-490,1725,o),
(-541,1670,o),
(-541,1591,cs),
(-541,1512,o),
(-490,1457,o),
(-417,1457,cs)
);
},
{
closed = 1;
nodes = (
(-469,1493,o),
(-505,1533,o),
(-505,1591,cs),
(-505,1649,o),
(-469,1689,o),
(-417,1689,cs),
(-365,1689,o),
(-329,1649,o),
(-329,1591,cs),
(-329,1533,o),
(-365,1493,o),
(-417,1493,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 2 1 57 56 2 13 6 34 1 16 8 62 1 10 16 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 3 3 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 11 1 3 4 1 0 3 0 102 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 3 0 11 89 0 3 4 1 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 6 2 13 2 6 114 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 6 2 13 2 6 13 128 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
104 103 84 83 110 108 103 114 104 114 94 92 83 102 84 102 82 80 78 76 71 69 67 66 22 19 22 44 36 36 36 36 34 19 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-694,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-1084,1741,l),
(-1113,1752,o),
(-1130,1780,o),
(-1130,1806,cs),
(-1130,1852,o),
(-1078,1868,o),
(-1018,1868,cs),
(-954,1868,o),
(-885,1850,o),
(-861,1832,c),
(-800,1989,l),
(-861,2036,o),
(-974,2070,o),
(-1086,2070,cs),
(-1257,2070,o),
(-1376,1973,o),
(-1376,1835,cs),
(-1376,1766,o),
(-1339,1700,o),
(-1288,1674,c)
);
},
{
closed = 1;
nodes = (
(-969,1240,o),
(-871,1264,o),
(-826,1301,c),
(-872,1453,l),
(-903,1440,o),
(-957,1431,o),
(-1003,1431,cs),
(-1095,1431,o),
(-1139,1456,o),
(-1139,1501,cs),
(-1139,1544,o),
(-1095,1571,o),
(-1003,1571,cs),
(-957,1571,o),
(-903,1562,o),
(-871,1548,c),
(-826,1701,l),
(-869,1736,o),
(-967,1762,o),
(-1054,1762,cs),
(-1267,1762,o),
(-1395,1667,o),
(-1395,1501,cs),
(-1395,1335,o),
(-1269,1240,o),
(-1054,1240,cs)
);
},
{
closed = 1;
nodes = (
(-134,1240,o),
(6,1415,o),
(6,1655,cs),
(6,1897,o),
(-134,2070,o),
(-384,2070,cs),
(-631,2070,o),
(-774,1897,o),
(-774,1655,cs),
(-774,1411,o),
(-631,1240,o),
(-384,1240,cs)
);
},
{
closed = 1;
nodes = (
(-497,1438,o),
(-570,1522,o),
(-570,1655,cs),
(-570,1788,o),
(-497,1872,o),
(-384,1872,cs),
(-271,1872,o),
(-198,1788,o),
(-198,1655,cs),
(-198,1522,o),
(-271,1438,o),
(-384,1438,cs)
);
},
{
closed = 1;
nodes = (
(-316,1530,o),
(-268,1582,o),
(-268,1655,cs),
(-268,1728,o),
(-316,1780,o),
(-384,1780,cs),
(-452,1780,o),
(-500,1728,o),
(-500,1655,cs),
(-500,1582,o),
(-452,1530,o),
(-384,1530,cs)
);
},
{
closed = 1;
nodes = (
(-410,1600,o),
(-429,1623,o),
(-429,1655,cs),
(-429,1687,o),
(-410,1710,o),
(-384,1710,cs),
(-358,1710,o),
(-339,1687,o),
(-339,1655,cs),
(-339,1623,o),
(-358,1600,o),
(-384,1600,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 2 1 57 56 2 13 6 34 1 16 8 62 1 10 16 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 3 3 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 11 1 3 4 1 0 3 0 102 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 3 0 11 89 0 3 4 1 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 6 2 13 2 6 114 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 6 2 13 2 6 13 128 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
104 103 84 83 110 108 103 114 104 114 94 92 83 102 84 102 82 80 78 76 71 69 67 66 22 19 22 44 36 36 36 36 34 19 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-675,1118);
}
);
hints = (
{
horizontal = 1;
origin = (2,11);
target = (1,6);
type = Stem;
},
{
horizontal = 1;
origin = (4,11);
target = (5,11);
type = Stem;
},
{
horizontal = 1;
origin = (1,12);
target = (1,19);
type = Stem;
},
{
horizontal = 1;
origin = (3,5);
target = (2,5);
type = Stem;
},
{
horizontal = 1;
origin = (5,5);
target = (4,5);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-1049,1681,l),
(-1097,1703,o),
(-1129,1750,o),
(-1129,1801,cs),
(-1129,1867,o),
(-1072,1895,o),
(-996,1895,cs),
(-928,1895,o),
(-853,1874,o),
(-815,1846,c),
(-769,1954,l),
(-833,2001,o),
(-929,2029,o),
(-1025,2029,cs),
(-1189,2029,o),
(-1295,1942,o),
(-1295,1813,cs),
(-1295,1741,o),
(-1261,1672,o),
(-1197,1641,c)
);
},
{
closed = 1;
nodes = (
(-945,1240,o),
(-849,1262,o),
(-787,1304,c),
(-824,1426,l),
(-888,1391,o),
(-960,1371,o),
(-1024,1371,cs),
(-1111,1371,o),
(-1156,1408,o),
(-1156,1474,cs),
(-1156,1540,o),
(-1111,1577,o),
(-1024,1577,cs),
(-960,1577,o),
(-885,1557,o),
(-821,1522,c),
(-787,1643,l),
(-849,1685,o),
(-945,1707,o),
(-1038,1707,cs),
(-1210,1707,o),
(-1318,1617,o),
(-1318,1474,cs),
(-1318,1330,o),
(-1210,1240,o),
(-1038,1240,cs)
);
},
{
closed = 1;
nodes = (
(-171,1240,o),
(-31,1398,o),
(-31,1623,cs),
(-31,1848,o),
(-171,2006,o),
(-392,2006,cs),
(-613,2006,o),
(-753,1848,o),
(-753,1623,cs),
(-753,1398,o),
(-613,1240,o),
(-392,1240,cs)
);
},
{
closed = 1;
nodes = (
(-532,1367,o),
(-620,1466,o),
(-620,1623,cs),
(-620,1780,o),
(-532,1879,o),
(-392,1879,cs),
(-252,1879,o),
(-164,1780,o),
(-164,1623,cs),
(-164,1466,o),
(-252,1367,o),
(-392,1367,cs)
);
},
{
closed = 1;
nodes = (
(-308,1473,o),
(-249,1535,o),
(-249,1623,cs),
(-249,1711,o),
(-308,1773,o),
(-392,1773,cs),
(-476,1773,o),
(-535,1711,o),
(-535,1623,cs),
(-535,1535,o),
(-476,1473,o),
(-392,1473,cs)
);
},
{
closed = 1;
nodes = (
(-436,1538,o),
(-467,1573,o),
(-467,1623,cs),
(-467,1673,o),
(-436,1708,o),
(-392,1708,cs),
(-348,1708,o),
(-317,1673,o),
(-317,1623,cs),
(-317,1573,o),
(-348,1538,o),
(-392,1538,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
44 1 2 1 57 56 2 13 6 34 1 16 8 62 1 10 16 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
24 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 69 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 3 3 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 11 1 3 4 1 0 3 0 102 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
27 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 74 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 3 0 11 89 0 3 4 1 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 75 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 11 12 114 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 76 values pushed */
0 6 2 13 2 6 114 0 9 15 14 10 9 114 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
47 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 77 values pushed */
0 6 2 13 2 6 114 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 78 values pushed */
0 6 2 13 2 6 13 128 0 9 15 14 15 9 14 128 0 12 14 11 14 12 11 128 17 1 13 0 16 10 13 16 105 0 8 0 10 15 8 10 105 18 1 15 0 14 12 15 14 105 0 11 0 4 0 11 4 106 0 3 0 0 3 0 101 7 1 2 2 1 97 5 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 36 values pushed */
104 103 84 83 110 108 103 114 104 114 94 92 83 102 84 102 82 80 78 76 71 69 67 66 22 19 22 44 36 36 36 36 34 19 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE394;
production = uni1004103A1033;
script = myanmar;
subCategory = Nonspacing;
}
