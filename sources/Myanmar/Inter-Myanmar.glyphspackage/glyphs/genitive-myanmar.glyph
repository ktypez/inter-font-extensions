{
glyphname = "genitive-myanmar";
layers = (
{
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(936,-24,o),
(1120,107,o),
(1170,322,c),
(1112,400,o),
(954,453,o),
(791,453,cs),
(578,453,o),
(388,362,o),
(291,214,c),
(316,172,l),
(406,322,o),
(588,411,o),
(802,411,cs),
(945,411,o),
(1059,374,o),
(1142,296,c),
(1126,333,l),
(1085,148,o),
(917,21,o),
(710,21,cs),
(414,21,o),
(196,255,o),
(196,559,cs),
(196,863,o),
(414,1097,o),
(710,1097,cs),
(917,1097,o),
(1085,970,o),
(1126,785,c),
(1142,822,l),
(1059,744,o),
(945,707,o),
(802,707,cs),
(588,707,o),
(406,796,o),
(316,946,c),
(291,904,l),
(388,756,o),
(578,665,o),
(791,665,cs),
(954,665,o),
(1112,718,o),
(1170,796,c),
(1120,1011,o),
(936,1142,o),
(710,1142,cs),
(382,1142,o),
(150,894,o),
(150,559,cs),
(150,224,o),
(382,-24,o),
(710,-24,cs)
);
},
{
closed = 1;
nodes = (
(1532,0,l),
(1532,863,ls),
(1532,1027,o),
(1409,1142,o),
(1234,1142,cs),
(1129,1142,o),
(1043,1100,o),
(991,1031,c),
(1028,1004,l),
(1072,1062,o),
(1145,1097,o),
(1234,1097,cs),
(1382,1097,o),
(1486,1000,o),
(1486,862,cs),
(1486,0,l)
);
},
{
closed = 1;
nodes = (
(1906,0,l),
(1906,793,ls),
(1906,986,o),
(1760,1115,o),
(1615,1243,cs),
(1475,1366,o),
(1337,1489,o),
(1337,1666,cs),
(1337,1835,o),
(1449,1944,o),
(1632,1944,cs),
(1733,1944,o),
(1840,1911,o),
(1930,1849,c),
(1955,1881,l),
(1864,1947,o),
(1748,1984,o),
(1631,1984,cs),
(1423,1984,o),
(1297,1859,o),
(1297,1664,cs),
(1297,1472,o),
(1442,1342,o),
(1585,1216,cs),
(1724,1093,o),
(1860,971,o),
(1860,795,cs),
(1860,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
71 1 9 10 82 1 2 9 19 1 5 2 99 93 48 38 4 12 5 109 103 2 13 14 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
102 101 92 91 105 104 101 110 102 110 98 97 91 100 92 100 78 76 74 73 29 40 38 53 37 34 36 37 35 17 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2076;
},
{
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(1039,-24,o),
(1266,135,o),
(1302,377,c),
(1217,467,o),
(1040,517,o),
(843,517,cs),
(628,517,o),
(429,459,o),
(326,335,c),
(454,197,l),
(527,283,o),
(650,341,o),
(789,341,cs),
(869,341,o),
(947,322,o),
(1010,278,c),
(977,374,l),
(952,278,o),
(876,219,o),
(749,219,cs),
(604,219,o),
(452,319,o),
(452,559,cs),
(452,799,o),
(604,899,o),
(749,899,cs),
(876,899,o),
(952,840,o),
(977,744,c),
(1010,840,l),
(947,796,o),
(869,777,o),
(789,777,cs),
(650,777,o),
(527,834,o),
(454,921,c),
(326,783,l),
(429,659,o),
(628,601,o),
(843,601,cs),
(1040,601,o),
(1217,651,o),
(1302,741,c),
(1266,983,o),
(1039,1142,o),
(712,1142,cs),
(327,1142,o),
(86,942,o),
(86,559,cs),
(86,176,o),
(327,-24,o),
(712,-24,cs)
);
},
{
closed = 1;
nodes = (
(1791,0,l),
(1791,732,ls),
(1791,984,o),
(1599,1142,o),
(1294,1142,cs),
(1184,1142,o),
(1088,1121,o),
(1011,1082,c),
(1164,845,l),
(1194,868,o),
(1233,880,o),
(1279,880,cs),
(1391,880,o),
(1461,807,o),
(1461,691,cs),
(1461,0,l)
);
},
{
closed = 1;
nodes = (
(2289,0,l),
(2289,903,ls),
(2289,1231,o),
(2116,1373,o),
(1982,1483,cs),
(1899,1551,o),
(1831,1607,o),
(1831,1687,cs),
(1831,1779,o),
(1915,1828,o),
(2014,1828,cs),
(2094,1828,o),
(2183,1800,o),
(2247,1735,c),
(2383,1911,l),
(2297,2011,o),
(2125,2074,o),
(1936,2074,cs),
(1663,2074,o),
(1492,1925,o),
(1492,1701,cs),
(1492,1497,o),
(1612,1382,o),
(1730,1272,cs),
(1842,1167,o),
(1949,1064,o),
(1949,890,cs),
(1949,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
71 1 9 10 82 1 2 9 19 1 5 2 99 93 48 38 4 12 5 109 103 2 13 14 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
102 101 92 91 105 104 101 110 102 110 98 97 91 100 92 100 78 76 74 73 29 40 38 53 37 34 36 37 35 17 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2405;
},
{
hints = (
{
horizontal = 1;
origin = (0,51);
target = (0,19);
type = Stem;
},
{
horizontal = 1;
origin = (0,16);
target = (0,5);
type = Stem;
},
{
horizontal = 1;
origin = (0,39);
target = (0,32);
type = Stem;
},
{
horizontal = 1;
origin = (1,4);
target = (0,25);
type = Stem;
},
{
horizontal = 1;
origin = (2,10);
target = (2,17);
type = Stem;
},
{
horizontal = 1;
origin = (2,27);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = (1,4);
target = (1,11);
type = Stem;
},
{
origin = (0,48);
target = (0,22);
type = Stem;
},
{
origin = (1,15);
target = (1,1);
type = Stem;
},
{
origin = (2,27);
target = (2,1);
type = Stem;
},
{
origin = (2,20);
target = (2,7);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(966,-24,o),
(1179,146,o),
(1225,382,c),
(1145,463,o),
(981,522,o),
(804,522,cs),
(592,522,o),
(387,454,o),
(281,304,c),
(372,198,l),
(461,328,o),
(626,390,o),
(801,390,cs),
(913,390,o),
(1027,353,o),
(1098,293,c),
(1066,390,l),
(1027,224,o),
(890,120,o),
(712,120,cs),
(476,120,o),
(300,291,o),
(300,559,cs),
(300,827,o),
(476,998,o),
(712,998,cs),
(890,998,o),
(1027,894,o),
(1066,728,c),
(1098,825,l),
(1027,765,o),
(913,728,o),
(801,728,cs),
(626,728,o),
(461,790,o),
(372,920,c),
(281,814,l),
(387,664,o),
(592,596,o),
(804,596,cs),
(981,596,o),
(1145,655,o),
(1225,736,c),
(1179,972,o),
(966,1142,o),
(696,1142,cs),
(363,1142,o),
(126,905,o),
(126,559,cs),
(126,213,o),
(363,-24,o),
(696,-24,cs)
);
},
{
closed = 1;
nodes = (
(1637,0,l),
(1637,811,ls),
(1637,1014,o),
(1492,1142,o),
(1260,1142,cs),
(1159,1142,o),
(1063,1106,o),
(992,1041,c),
(1084,920,l),
(1128,960,o),
(1198,982,o),
(1254,982,cs),
(1384,982,o),
(1465,909,o),
(1465,794,cs),
(1465,0,l)
);
},
{
closed = 1;
nodes = (
(2061,0,l),
(2061,846,ls),
(2061,1089,o),
(1903,1230,o),
(1760,1357,cs),
(1644,1460,o),
(1538,1556,o),
(1538,1689,cs),
(1538,1812,o),
(1640,1889,o),
(1803,1889,cs),
(1891,1889,o),
(1978,1861,o),
(2030,1816,c),
(2111,1922,l),
(2033,1988,o),
(1907,2029,o),
(1784,2029,cs),
(1533,2029,o),
(1376,1900,o),
(1376,1694,cs),
(1376,1493,o),
(1510,1368,o),
(1642,1246,cs),
(1767,1130,o),
(1889,1016,o),
(1889,842,cs),
(1889,0,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
71 1 9 10 82 1 2 9 19 1 5 2 99 93 48 38 4 12 5 109 103 2 13 14 5 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 9 10 2 10 9 114 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 77 7 1 4 4 38 4 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 9 10 2 10 9 2 128 7 1 4 1 4 134 0 12 0 6 0 12 6 105 0 0 0 14 13 0 14 105 0 10 10 8 97 0 8 8 39 77 15 11 2 5 5 2 97 3 1 2 2 37 77 16 1 13 13 1 97 0 1 1 38 1 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 32 values pushed */
102 101 92 91 105 104 101 110 102 110 98 97 91 100 92 100 78 76 74 73 29 40 38 53 37 34 36 37 35 17 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2211;
}
);
note = uni104F;
unicode = 4175;
}
