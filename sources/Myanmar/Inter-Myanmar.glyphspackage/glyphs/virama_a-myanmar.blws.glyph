{
glyphname = "virama_a-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottom;
pos = (-660,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-755,-552,o),
(-621,-474,o),
(-621,-368,cs),
(-621,-251,o),
(-744,-186,o),
(-935,-186,cs),
(-1089,-186,o),
(-1212,-250,o),
(-1254,-353,c),
(-1215,-363,l),
(-1179,-279,o),
(-1071,-226,o),
(-935,-226,cs),
(-769,-226,o),
(-661,-278,o),
(-661,-370,cs),
(-661,-455,o),
(-780,-519,o),
(-969,-519,c),
(-969,-556,l)
);
},
{
closed = 1;
nodes = (
(-732,-888,o),
(-621,-824,o),
(-621,-707,cs),
(-621,-601,o),
(-755,-523,o),
(-969,-519,c),
(-969,-556,l),
(-780,-556,o),
(-661,-620,o),
(-661,-705,cs),
(-661,-799,o),
(-757,-848,o),
(-935,-848,cs),
(-1066,-848,o),
(-1174,-795,o),
(-1215,-711,c),
(-1254,-721,l),
(-1212,-824,o),
(-1089,-888,o),
(-935,-888,cs)
);
},
{
closed = 1;
nodes = (
(-205,-889,o),
(-70,-720,o),
(-70,-522,cs),
(-70,-316,o),
(-193,-186,o),
(-390,-186,cs),
(-502,-186,o),
(-605,-232,o),
(-658,-305,c),
(-636,-341,l),
(-589,-270,o),
(-494,-226,o),
(-390,-226,cs),
(-218,-226,o),
(-110,-340,o),
(-110,-522,cs),
(-110,-695,o),
(-224,-851,o),
(-363,-851,cs),
(-376,-851,o),
(-390,-848,o),
(-405,-844,c),
(-385,-876,l),
(-387,-857,o),
(-388,-839,o),
(-388,-826,cs),
(-388,-645,o),
(-279,-509,o),
(-94,-467,c),
(-101,-426,l),
(-311,-479,o),
(-428,-630,o),
(-428,-812,cs),
(-428,-832,o),
(-426,-857,o),
(-422,-883,c),
(-407,-888,o),
(-383,-889,o),
(-366,-889,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
86 1 1 9 64 1 5 6 102 56 44 39 4 4 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 1 6 1 8 114 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 5 3 11 128 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 0 0 4 89 0 4 4 0 98 2 1 0 4 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
99 98 90 88 85 83 81 79 75 72 67 65 63 60 55 53 48 47 42 40 27 26 22 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-694,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-660,-546,o),
(-606,-443,o),
(-606,-333,cs),
(-606,-203,o),
(-754,-122,o),
(-990,-122,cs),
(-1213,-122,o),
(-1364,-212,o),
(-1382,-355,c),
(-1174,-409,l),
(-1162,-346,o),
(-1096,-306,o),
(-1003,-306,cs),
(-906,-306,o),
(-848,-332,o),
(-848,-372,cs),
(-848,-415,o),
(-899,-443,o),
(-980,-447,c),
(-980,-552,l)
);
},
{
closed = 1;
nodes = (
(-754,-888,o),
(-606,-807,o),
(-606,-677,cs),
(-606,-567,o),
(-660,-465,o),
(-980,-459,c),
(-980,-564,l),
(-899,-569,o),
(-848,-594,o),
(-848,-638,cs),
(-848,-678,o),
(-906,-704,o),
(-1003,-704,cs),
(-1096,-704,o),
(-1162,-664,o),
(-1174,-600,c),
(-1382,-654,l),
(-1364,-798,o),
(-1213,-888,o),
(-990,-888,cs)
);
},
{
closed = 1;
nodes = (
(-131,-887,o),
(-6,-740,o),
(-6,-497,cs),
(-6,-244,o),
(-194,-122,o),
(-401,-122,cs),
(-559,-122,o),
(-699,-207,o),
(-747,-347,c),
(-642,-430,l),
(-601,-367,o),
(-510,-327,o),
(-406,-327,cs),
(-276,-327,o),
(-195,-404,o),
(-195,-526,cs),
(-195,-633,o),
(-237,-750,o),
(-373,-750,cs),
(-384,-750,o),
(-395,-750,o),
(-407,-748,c),
(-353,-786,l),
(-356,-774,o),
(-358,-761,o),
(-358,-748,cs),
(-358,-656,o),
(-286,-526,o),
(-150,-497,c),
(-197,-394,l),
(-338,-423,o),
(-482,-554,o),
(-482,-812,cs),
(-482,-827,o),
(-482,-843,o),
(-481,-860,c),
(-427,-883,o),
(-381,-887,o),
(-330,-887,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
86 1 1 9 64 1 5 6 102 56 44 39 4 4 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 1 6 1 8 114 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 5 3 11 128 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 0 0 4 89 0 4 4 0 98 2 1 0 4 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
99 98 90 88 85 83 81 79 75 72 67 65 63 60 55 53 48 47 42 40 27 26 22 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-675,0);
}
);
hints = (
{
horizontal = 1;
origin = (2,38);
target = (1,12);
type = Stem;
},
{
horizontal = 1;
origin = (1,6);
target = (0,18);
type = Stem;
},
{
horizontal = 1;
origin = (0,12);
target = (2,5);
type = Stem;
},
{
horizontal = 1;
origin = (2,38);
target = (2,18);
type = Stem;
},
{
horizontal = 1;
origin = (2,12);
target = (2,5);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-740,-570,o),
(-610,-482,o),
(-610,-358,cs),
(-610,-239,o),
(-746,-165,o),
(-962,-165,cs),
(-1168,-165,o),
(-1308,-239,o),
(-1325,-358,c),
(-1192,-393,l),
(-1181,-332,o),
(-1094,-287,o),
(-967,-287,cs),
(-837,-287,o),
(-756,-316,o),
(-756,-374,cs),
(-756,-447,o),
(-837,-467,o),
(-965,-475,c),
(-965,-577,l)
);
},
{
closed = 1;
nodes = (
(-746,-888,o),
(-610,-813,o),
(-610,-695,cs),
(-610,-572,o),
(-747,-481,o),
(-965,-477,c),
(-965,-579,l),
(-837,-587,o),
(-756,-607,o),
(-756,-678,cs),
(-756,-737,o),
(-837,-766,o),
(-967,-766,cs),
(-1094,-766,o),
(-1181,-725,o),
(-1192,-660,c),
(-1325,-695,l),
(-1308,-813,o),
(-1168,-888,o),
(-962,-888,cs)
);
},
{
closed = 1;
nodes = (
(-188,-888,o),
(-28,-753,o),
(-28,-517,cs),
(-28,-301,o),
(-170,-165,o),
(-396,-165,cs),
(-507,-165,o),
(-614,-198,o),
(-684,-267,c),
(-627,-380,l),
(-565,-320,o),
(-483,-289,o),
(-405,-289,cs),
(-281,-289,o),
(-168,-365,o),
(-168,-500,cs),
(-168,-644,o),
(-257,-762,o),
(-410,-762,cs),
(-424,-762,o),
(-442,-761,o),
(-459,-757,c),
(-427,-787,l),
(-428,-782,o),
(-428,-774,o),
(-428,-769,cs),
(-428,-657,o),
(-280,-529,o),
(-133,-507,c),
(-153,-424,l),
(-362,-459,o),
(-533,-596,o),
(-533,-796,cs),
(-533,-810,o),
(-532,-852,o),
(-530,-867,c),
(-497,-880,o),
(-452,-888,o),
(-402,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
86 1 1 9 64 1 5 6 102 56 44 39 4 4 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 51 values pushed */
0 8 1 6 1 8 114 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 4 3 114 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 4 0 98 2 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 58 values pushed */
0 8 1 6 1 8 6 128 0 3 5 11 5 3 11 128 0 11 4 5 11 4 126 10 1 9 7 1 1 8 9 1 105 0 6 0 5 3 6 5 105 0 4 0 0 4 89 0 4 4 0 98 2 1 0 4 0 82 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 26 values pushed */
99 98 90 88 85 83 81 79 75 72 67 65 63 60 55 53 48 47 42 40 27 26 22 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE021.blws;
}
