{
glyphname = "ga-tailaing";
layers = (
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1616,0);
},
{
name = top;
pos = (1616,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(458,7,l),
(296,126,o),
(196,331,o),
(196,541,cs),
(196,883,o),
(381,1097,o),
(677,1097,cs),
(973,1097,o),
(1158,883,o),
(1158,541,cs),
(1158,331,o),
(1058,126,o),
(896,7,c),
(929,-24,l),
(1098,103,o),
(1204,321,o),
(1204,541,cs),
(1204,635,o),
(1190,725,o),
(1162,805,c),
(1160,747,l),
(1224,961,o),
(1395,1097,o),
(1608,1097,cs),
(1902,1097,o),
(2080,889,o),
(2080,559,cs),
(2080,229,o),
(1919,21,o),
(1617,21,cs),
(1562,21,o),
(1508,30,o),
(1457,48,c),
(1443,5,l),
(1498,-14,o),
(1557,-24,o),
(1617,-24,cs),
(1948,-24,o),
(2126,201,o),
(2126,559,cs),
(2126,918,o),
(1929,1142,o),
(1608,1142,cs),
(1390,1142,o),
(1214,1015,o),
(1136,811,c),
(1159,811,l),
(1085,1017,o),
(917,1142,o),
(677,1142,cs),
(353,1142,o),
(150,911,o),
(150,541,cs),
(150,321,o),
(256,103,o),
(425,-24,c)
);
},
{
closed = 1;
nodes = (
(1693,409,o),
(1748,471,o),
(1748,559,cs),
(1748,647,o),
(1693,709,o),
(1614,709,cs),
(1535,709,o),
(1480,647,o),
(1480,559,cs),
(1480,471,o),
(1535,409,o),
(1614,409,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 3 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 7 3 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 3 1 2 2 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 3 3 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 7 7 38 77 0 3 3 0 97 5 1 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
88 87 68 67 94 92 87 98 88 98 78 76 67 86 68 86 65 63 37 24 40 22 39 18 21 18 18 16 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2276;
},
{
anchors = (
{
name = bottom;
pos = (1129,0);
},
{
name = bottomright;
pos = (1542,0);
},
{
name = top;
pos = (1542,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(602,186,l),
(509,245,o),
(452,380,o),
(452,537,cs),
(452,712,o),
(545,822,o),
(694,822,cs),
(843,822,o),
(936,712,o),
(936,537,cs),
(936,380,o),
(878,245,o),
(785,186,c),
(1012,-24,l),
(1190,74,o),
(1302,291,o),
(1302,538,cs),
(1302,592,o),
(1297,644,o),
(1287,692,c),
(1268,623,l),
(1311,745,o),
(1422,822,o),
(1556,822,cs),
(1710,822,o),
(1806,714,o),
(1806,542,cs),
(1806,408,o),
(1748,265,o),
(1567,265,cs),
(1533,265,o),
(1489,272,o),
(1455,284,c),
(1385,18,l),
(1447,-8,o),
(1538,-24,o),
(1634,-24,cs),
(1964,-24,o),
(2172,197,o),
(2172,548,cs),
(2172,905,o),
(1954,1142,o),
(1605,1142,cs),
(1335,1142,o),
(1121,1013,o),
(1048,801,c),
(1252,801,l),
(1165,1012,o),
(966,1142,o),
(694,1142,cs),
(321,1142,o),
(86,909,o),
(86,538,cs),
(86,291,o),
(197,74,o),
(375,-24,c)
);
},
{
closed = 1;
nodes = (
(1630,397,o),
(1682,453,o),
(1682,542,cs),
(1682,631,o),
(1630,687,o),
(1547,687,cs),
(1464,687,o),
(1412,631,o),
(1412,542,cs),
(1412,453,o),
(1464,397,o),
(1547,397,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 3 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 7 3 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 3 1 2 2 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 3 3 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 7 7 38 77 0 3 3 0 97 5 1 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
88 87 68 67 94 92 87 98 88 98 78 76 67 86 68 86 65 63 37 24 40 22 39 18 21 18 18 16 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2258;
},
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1582,0);
},
{
name = top;
pos = (1582,1118);
}
);
hints = (
{
horizontal = 1;
origin = (0,55);
target = (0,29);
type = Stem;
},
{
horizontal = 1;
origin = (0,49);
target = (0,23);
type = Stem;
},
{
origin = (0,52);
target = (0,3);
type = Stem;
},
{
origin = (0,9);
target = (0,16);
type = Stem;
},
{
origin = (0,26);
target = (0,39);
type = Stem;
},
{
horizontal = 1;
origin = (1,11);
target = (1,5);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(521,87,l),
(375,204,o),
(300,358,o),
(300,539,cs),
(300,815,o),
(448,982,o),
(685,982,cs),
(923,982,o),
(1071,815,o),
(1071,539,cs),
(1071,358,o),
(996,204,o),
(850,87,c),
(971,-24,l),
(1147,107,o),
(1245,309,o),
(1245,540,cs),
(1245,618,o),
(1234,693,o),
(1214,760,c),
(1205,697,l),
(1260,875,o),
(1407,982,o),
(1589,982,cs),
(1827,982,o),
(1972,819,o),
(1972,552,cs),
(1972,301,o),
(1852,122,o),
(1599,122,cs),
(1552,122,o),
(1502,130,o),
(1458,145,c),
(1421,10,l),
(1479,-12,o),
(1551,-24,o),
(1625,-24,cs),
(1956,-24,o),
(2146,199,o),
(2146,555,cs),
(2146,913,o),
(1941,1142,o),
(1608,1142,cs),
(1370,1142,o),
(1178,1014,o),
(1102,807,c),
(1198,807,l),
(1119,1015,o),
(938,1142,o),
(685,1142,cs),
(342,1142,o),
(126,910,o),
(126,540,cs),
(126,309,o),
(224,107,o),
(400,-24,c)
);
},
{
closed = 1;
nodes = (
(1668,404,o),
(1724,465,o),
(1724,552,cs),
(1724,639,o),
(1668,700,o),
(1589,700,cs),
(1510,700,o),
(1454,639,o),
(1454,552,cs),
(1454,465,o),
(1510,404,o),
(1589,404,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 2 3 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 0 3 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 17 values pushed */
59 1 10 4 36 27 2 12 13 48 10 4 3 7 3 3 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 45 values pushed */
14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 3 1 2 2 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 52 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 3 3 0 97 7 5 1 3 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 56 values pushed */
0 2 11 3 11 2 3 128 14 1 10 0 13 12 10 13 105 15 1 12 0 11 2 12 11 105 6 1 4 4 8 97 9 1 8 8 37 77 0 7 7 38 77 0 3 3 0 97 5 1 2 0 0 38 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 30 values pushed */
88 87 68 67 94 92 87 98 88 98 78 76 67 86 68 86 65 63 37 24 40 22 39 18 21 18 18 16 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2272;
}
);
note = uniA9E9;
unicode = 43497;
}
