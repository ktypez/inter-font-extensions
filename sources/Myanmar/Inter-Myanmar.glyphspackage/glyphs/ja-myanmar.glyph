{
glyphname = "ja-myanmar";
layers = (
{
anchors = (
{
name = bottom;
pos = (663,0);
},
{
name = bottomright;
pos = (663,0);
},
{
name = top;
pos = (698,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(910,-24,o),
(1096,89,o),
(1170,269,c),
(1128,286,l),
(1063,123,o),
(894,21,o),
(688,21,cs),
(386,21,o),
(196,228,o),
(196,557,cs),
(196,943,o),
(467,1097,o),
(717,1097,cs),
(933,1097,o),
(1102,981,o),
(1102,793,cs),
(1102,675,o),
(983,583,o),
(834,583,cs),
(693,583,o),
(625,653,o),
(625,724,cs),
(625,801,o),
(692,855,o),
(785,855,cs),
(974,855,o),
(1134,727,o),
(1265,470,c),
(1300,498,l),
(1160,765,o),
(987,897,o),
(782,897,cs),
(663,897,o),
(579,828,o),
(579,726,cs),
(579,632,o),
(662,539,o),
(833,539,cs),
(1007,539,o),
(1144,652,o),
(1144,796,cs),
(1144,1012,o),
(954,1142,o),
(715,1142,cs),
(443,1142,o),
(150,975,o),
(150,558,cs),
(150,200,o),
(358,-24,o),
(688,-24,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
18 1 8 2 68 64 55 11 5 0 6 1 8 39 1 6 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 8 0 8 1 114 0 0 5 8 0 5 126 0 5 4 8 5 4 126 0 2 0 8 1 2 8 105 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 8 0 8 1 0 128 0 0 5 8 0 5 126 0 5 4 8 5 4 126 0 2 0 8 1 2 8 105 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
43 36 37 19 38 40 38 19 33 9 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1320;
},
{
anchors = (
{
name = bottom;
pos = (710,0);
},
{
name = bottomright;
pos = (710,0);
},
{
name = top;
pos = (718,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(865,-24,o),
(1021,4,o),
(1107,74,c),
(946,332,l),
(890,300,o),
(813,286,o),
(743,286,cs),
(551,286,o),
(452,434,o),
(452,585,cs),
(452,809,o),
(639,898,o),
(780,898,cs),
(956,898,o),
(1023,808,o),
(1023,722,cs),
(1023,641,o),
(965,559,o),
(867,559,cs),
(811,559,o),
(776,580,o),
(776,614,cs),
(776,648,o),
(806,669,o),
(853,669,cs),
(991,669,o),
(1096,521,o),
(1207,335,c),
(1382,466,l),
(1238,696,o),
(1029,840,o),
(840,840,cs),
(685,840,o),
(591,756,o),
(591,619,cs),
(591,491,o),
(696,400,o),
(874,400,cs),
(1124,400,o),
(1240,606,o),
(1240,736,cs),
(1240,978,o),
(1033,1142,o),
(710,1142,cs),
(351,1142,o),
(86,905,o),
(86,559,cs),
(86,208,o),
(339,-24,o),
(743,-24,cs)
);
}
);
width = 1388;
},
{
anchors = (
{
name = bottom;
pos = (715,0);
},
{
name = bottomright;
pos = (717,0);
},
{
name = top;
pos = (700,1118);
}
);
hints = (
{
horizontal = 1;
origin = (0,49);
target = (0,6);
type = Stem;
},
{
horizontal = 1;
origin = (0,37);
target = (0,18);
type = Stem;
},
{
horizontal = 1;
origin = (0,24);
target = (0,31);
type = Stem;
},
{
horizontal = 1;
origin = (0,43);
target = (0,12);
type = Stem;
},
{
origin = (0,46);
target = (0,9);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(933,-24,o),
(1070,54,o),
(1158,179,c),
(1068,292,l),
(998,194,o),
(882,136,o),
(730,136,cs),
(473,136,o),
(300,307,o),
(300,568,cs),
(300,822,o),
(479,1000,o),
(734,1000,cs),
(919,1000,o),
(1049,903,o),
(1049,765,cs),
(1049,661,o),
(958,585,o),
(849,585,cs),
(762,585,o),
(707,622,o),
(707,680,cs),
(707,736,o),
(751,771,o),
(822,771,cs),
(990,771,o),
(1120,645,o),
(1243,416,c),
(1347,495,l),
(1206,747,o),
(1030,884,o),
(815,884,cs),
(672,884,o),
(573,809,o),
(573,683,cs),
(573,560,o),
(681,469,o),
(851,469,cs),
(1059,469,o),
(1184,634,o),
(1184,772,cs),
(1184,998,o),
(984,1142,o),
(705,1142,cs),
(354,1142,o),
(126,913,o),
(126,558,cs),
(126,205,o),
(364,-24,o),
(730,-24,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 19 values pushed */
18 1 8 2 68 64 55 11 5 0 6 1 8 39 1 6 4 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
0 1 8 0 8 1 114 0 0 5 8 0 5 126 0 5 4 8 5 4 126 0 2 0 8 1 2 8 105 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 6 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 51 values pushed */
0 1 8 0 8 1 0 128 0 0 5 8 0 5 126 0 5 4 8 5 4 126 0 2 0 8 1 2 8 105 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 6 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 12 values pushed */
43 36 37 19 38 40 38 19 33 9 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1350;
}
);
note = uni1007;
unicode = 4103;
}
