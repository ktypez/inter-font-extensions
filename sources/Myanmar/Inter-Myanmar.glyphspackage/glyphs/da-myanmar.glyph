{
glyphname = "da-myanmar";
layers = (
{
anchors = (
{
name = bottom;
pos = (649,0);
},
{
name = bottomright;
pos = (653,0);
},
{
name = top;
pos = (649,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(955,-24,o),
(1150,97,o),
(1150,290,cs),
(1150,397,o),
(1088,528,o),
(762,567,c),
(762,551,l),
(1088,589,o),
(1150,721,o),
(1150,828,cs),
(1150,1021,o),
(949,1142,o),
(644,1142,cs),
(398,1142,o),
(195,1036,o),
(128,868,c),
(168,852,l),
(231,1003,o),
(419,1097,o),
(644,1097,cs),
(925,1097,o),
(1104,994,o),
(1104,825,cs),
(1104,650,o),
(862,578,o),
(587,578,c),
(587,540,l),
(862,540,o),
(1104,467,o),
(1104,293,cs),
(1104,126,o),
(927,21,o),
(644,21,cs),
(419,21,o),
(231,115,o),
(168,266,c),
(128,250,l),
(195,82,o),
(398,-24,o),
(644,-24,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
30 0 2 6 5 2 1 3 4 19 9 4 3 2 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 2 1 114 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 36 36 34 36 36 35 37 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1300;
},
{
anchors = (
{
name = bottom;
pos = (692,0);
},
{
name = bottomright;
pos = (692,0);
},
{
name = top;
pos = (697,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(1068,-24,o),
(1302,99,o),
(1302,296,cs),
(1302,407,o),
(1264,514,o),
(1049,575,c),
(1049,543,l),
(1264,604,o),
(1302,711,o),
(1302,822,cs),
(1302,1019,o),
(1068,1142,o),
(697,1142,cs),
(344,1142,o),
(108,1005,o),
(80,788,c),
(399,706,l),
(428,819,o),
(563,863,o),
(690,863,cs),
(808,863,o),
(921,826,o),
(921,763,cs),
(921,697,o),
(841,655,o),
(712,648,c),
(712,470,l),
(841,463,o),
(921,421,o),
(921,355,cs),
(921,292,o),
(808,255,o),
(690,255,cs),
(563,255,o),
(428,299,o),
(399,412,c),
(80,330,l),
(108,113,o),
(344,-24,o),
(697,-24,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
30 0 2 6 5 2 1 3 4 19 9 4 3 2 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 2 1 114 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 36 36 34 36 36 35 37 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1388;
},
{
anchors = (
{
name = bottom;
pos = (667,0);
},
{
name = bottomright;
pos = (669,0);
},
{
name = top;
pos = (660,1118);
}
);
hints = (
{
horizontal = 1;
origin = (0,39);
target = (0,32);
type = Stem;
},
{
horizontal = 1;
origin = (0,26);
target = (0,25);
type = Stem;
},
{
horizontal = 1;
origin = (0,12);
target = (0,19);
type = Stem;
},
{
origin = (0,29);
target = (0,9);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(1002,-24,o),
(1214,104,o),
(1214,298,cs),
(1214,439,o),
(1129,525,o),
(954,573,c),
(954,545,l),
(1129,593,o),
(1214,681,o),
(1214,822,cs),
(1214,1016,o),
(1002,1142,o),
(670,1142,cs),
(383,1142,o),
(169,1024,o),
(115,836,c),
(278,792,l),
(326,921,o),
(469,986,o),
(662,986,cs),
(893,986,o),
(1040,926,o),
(1040,800,cs),
(1040,669,o),
(860,632,o),
(641,627,c),
(641,491,l),
(860,486,o),
(1040,449,o),
(1040,318,cs),
(1040,192,o),
(893,132,o),
(662,132,cs),
(469,132,o),
(326,197,o),
(278,326,c),
(115,282,l),
(169,94,o),
(383,-24,o),
(670,-24,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 17 values pushed */
30 0 2 6 5 2 1 3 4 19 9 4 3 2 1 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
13 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 44 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 2 1 114 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 6 5 4 5 6 4 128 0 1 3 2 3 1 2 128 0 4 0 3 1 4 3 105 0 5 5 7 97 0 7 7 37 77 0 2 2 0 98 0 0 0 38 0 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 11 values pushed */
36 36 36 34 36 36 35 37 8 8 30 
CALL[ ]	/* CallFunction */";
};
width = 1340;
}
);
note = uni1012;
unicode = 4114;
}
