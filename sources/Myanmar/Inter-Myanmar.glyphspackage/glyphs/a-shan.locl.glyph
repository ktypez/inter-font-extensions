{
glyphname = "a-shan.locl";
layers = (
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1616,0);
},
{
name = top;
pos = (1616,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(427,-24,o),
(492,33,o),
(492,128,cs),
(492,338,o),
(220,524,o),
(220,771,cs),
(220,971,o),
(405,1097,o),
(642,1097,cs),
(994,1097,o),
(1159,897,o),
(1159,539,cs),
(1159,334,o),
(1060,133,o),
(897,7,c),
(930,-24,l),
(1099,104,o),
(1205,322,o),
(1205,539,cs),
(1205,637,o),
(1191,726,o),
(1163,806,c),
(1161,745,l),
(1225,958,o),
(1394,1097,o),
(1608,1097,cs),
(1900,1097,o),
(2080,895,o),
(2080,559,cs),
(2080,214,o),
(1903,21,o),
(1587,21,cs),
(1532,21,o),
(1478,30,o),
(1427,48,c),
(1413,5,l),
(1468,-14,o),
(1527,-24,o),
(1587,-24,cs),
(1933,-24,o),
(2126,185,o),
(2126,558,cs),
(2126,917,o),
(1929,1142,o),
(1608,1142,cs),
(1390,1142,o),
(1215,1013,o),
(1137,809,c),
(1164,809,l),
(1089,1022,o),
(927,1142,o),
(642,1142,cs),
(377,1142,o),
(174,1000,o),
(174,773,cs),
(174,495,o),
(439,342,o),
(439,148,c),
(462,126,l),
(462,218,o),
(402,280,o),
(312,280,cs),
(224,280,o),
(162,217,o),
(162,128,cs),
(162,33,o),
(227,-24,o),
(327,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 0 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 5 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 9 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 8 5 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 5 4 2 0 0 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 4 1 0 0 3 97 9 8 2 3 3 38 77 0 5 5 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 4 1 0 0 3 97 8 1 3 3 38 77 0 10 10 9 97 0 9 9 38 77 0 5 5 3 97 8 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 4 1 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 0 5 0 4 5 128 7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 0 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
97 95 91 90 87 85 72 70 41 18 20 23 37 45 48 11 8 29 
CALL[ ]	/* CallFunction */";
};
width = 2276;
},
{
anchors = (
{
name = bottom;
pos = (1129,0);
},
{
name = bottomright;
pos = (1542,0);
},
{
name = top;
pos = (1542,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(518,-24,o),
(600,74,o),
(600,213,cs),
(600,396,o),
(463,464,o),
(463,637,cs),
(463,751,o),
(544,822,o),
(680,822,cs),
(846,822,o),
(946,712,o),
(946,537,cs),
(946,380,o),
(888,245,o),
(795,186,c),
(1022,-24,l),
(1200,74,o),
(1312,291,o),
(1312,538,cs),
(1312,592,o),
(1307,644,o),
(1297,692,c),
(1278,623,l),
(1321,745,o),
(1422,822,o),
(1556,822,cs),
(1710,822,o),
(1806,714,o),
(1806,542,cs),
(1806,408,o),
(1748,265,o),
(1567,265,cs),
(1533,265,o),
(1489,272,o),
(1455,284,c),
(1385,18,l),
(1447,-8,o),
(1538,-24,o),
(1634,-24,cs),
(1964,-24,o),
(2172,197,o),
(2172,548,cs),
(2172,905,o),
(1954,1142,o),
(1605,1142,cs),
(1335,1142,o),
(1131,1013,o),
(1058,801,c),
(1262,801,l),
(1175,1012,o),
(988,1142,o),
(686,1142,cs),
(351,1142,o),
(114,980,o),
(114,694,cs),
(114,454,o),
(273,388,o),
(273,305,c),
(486,359,l),
(443,408,o),
(381,439,o),
(311,439,cs),
(184,439,o),
(80,336,o),
(80,208,cs),
(80,72,o),
(183,-24,o),
(340,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 0 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 5 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 9 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 8 5 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 5 4 2 0 0 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 4 1 0 0 3 97 9 8 2 3 3 38 77 0 5 5 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 4 1 0 0 3 97 8 1 3 3 38 77 0 10 10 9 97 0 9 9 38 77 0 5 5 3 97 8 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 4 1 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 0 5 0 4 5 128 7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 0 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
97 95 91 90 87 85 72 70 41 18 20 23 37 45 48 11 8 29 
CALL[ ]	/* CallFunction */";
};
width = 2258;
},
{
anchors = (
{
name = bottom;
pos = (1138,0);
},
{
name = bottomright;
pos = (1582,0);
},
{
name = top;
pos = (1582,1118);
}
);
hints = (
{
horizontal = 1;
origin = (0,67);
target = (0,31);
type = Stem;
},
{
horizontal = 1;
origin = (0,51);
target = (0,25);
type = Stem;
},
{
origin = (0,54);
target = (0,5);
type = Stem;
},
{
origin = (0,11);
target = (0,18);
type = Stem;
},
{
origin = (0,28);
target = (0,41);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(457,-24,o),
(529,49,o),
(529,162,cs),
(529,361,o),
(315,510,o),
(315,727,cs),
(315,886,o),
(439,982,o),
(653,982,cs),
(930,982,o),
(1071,823,o),
(1071,538,cs),
(1071,352,o),
(989,178,o),
(854,79,c),
(964,-24,l),
(1137,92,o),
(1245,310,o),
(1245,539,cs),
(1245,619,o),
(1235,693,o),
(1214,760,c),
(1205,696,l),
(1261,873,o),
(1407,982,o),
(1589,982,cs),
(1826,982,o),
(1972,823,o),
(1972,552,cs),
(1972,301,o),
(1834,122,o),
(1581,122,cs),
(1534,122,o),
(1484,130,o),
(1440,145,c),
(1403,10,l),
(1461,-12,o),
(1533,-24,o),
(1607,-24,cs),
(1938,-24,o),
(2146,199,o),
(2146,554,cs),
(2146,912,o),
(1941,1142,o),
(1608,1142,cs),
(1370,1142,o),
(1179,1013,o),
(1103,806,c),
(1201,806,l),
(1121,1018,o),
(929,1142,o),
(637,1142,cs),
(325,1142,o),
(141,992,o),
(141,741,cs),
(141,479,o),
(367,360,o),
(367,211,c),
(466,219,l),
(448,294,o),
(388,344,o),
(306,344,cs),
(202,344,o),
(123,265,o),
(123,160,cs),
(123,49,o),
(203,-24,o),
(326,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 0 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 3 5 2 76 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 9 5 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 12 values pushed */
74 57 20 3 10 6 88 1 8 5 2 76 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 39 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 5 4 2 0 0 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 50 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 3 97 9 8 2 3 3 38 77 4 1 0 0 3 97 9 8 2 3 3 38 77 0 5 5 3 97 9 8 2 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
41 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 4 1 0 0 3 97 8 1 3 3 38 77 0 10 10 9 97 0 9 9 38 77 0 5 5 3 97 8 1 3 3 38 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 4 1 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 0 5 0 4 5 128 7 1 6 6 1 97 2 1 1 1 37 77 0 10 10 8 97 9 1 8 8 38 77 0 0 0 8 97 9 1 8 8 38 77 0 5 5 3 97 0 3 3 38 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
97 95 91 90 87 85 72 70 41 18 20 23 37 45 48 11 8 29 
CALL[ ]	/* CallFunction */";
};
width = 2272;
}
);
note = uni1022.locl;
}
