{
category = Mark;
glyphname = "kinzi_anusvara-myanmar";
layers = (
{
anchors = (
{
name = _top;
pos = (-660,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-975,1631,l),
(-1033,1657,o),
(-1068,1716,o),
(-1068,1783,cs),
(-1068,1881,o),
(-993,1945,o),
(-869,1945,cs),
(-791,1945,o),
(-718,1918,o),
(-674,1876,c),
(-664,1913,l),
(-721,1959,o),
(-791,1984,o),
(-872,1984,cs),
(-1016,1984,o),
(-1108,1905,o),
(-1108,1784,cs),
(-1108,1707,o),
(-1071,1641,o),
(-1010,1609,c)
);
},
{
closed = 1;
nodes = (
(-802,1240,o),
(-710,1268,o),
(-670,1306,c),
(-680,1344,l),
(-739,1304,o),
(-819,1280,o),
(-893,1280,cs),
(-1014,1280,o),
(-1087,1345,o),
(-1087,1451,cs),
(-1087,1557,o),
(-1014,1622,o),
(-893,1622,cs),
(-819,1622,o),
(-739,1598,o),
(-680,1558,c),
(-670,1596,l),
(-710,1634,o),
(-802,1662,o),
(-890,1662,cs),
(-1038,1662,o),
(-1127,1583,o),
(-1127,1451,cs),
(-1127,1319,o),
(-1038,1240,o),
(-890,1240,cs)
);
},
{
closed = 1;
nodes = (
(-254,1240,o),
(-194,1310,o),
(-194,1409,cs),
(-194,1508,o),
(-254,1578,o),
(-354,1578,cs),
(-454,1578,o),
(-514,1508,o),
(-514,1409,cs),
(-514,1310,o),
(-454,1240,o),
(-354,1240,cs)
);
},
{
closed = 1;
nodes = (
(-430,1279,o),
(-474,1333,o),
(-474,1409,cs),
(-474,1485,o),
(-430,1539,o),
(-354,1539,cs),
(-278,1539,o),
(-234,1485,o),
(-234,1409,cs),
(-234,1333,o),
(-278,1279,o),
(-354,1279,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 9 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 13 9 2 4 12 1 6 5 4 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 7 8 112 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 4 3 2 4 128 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
80 79 60 59 86 84 79 90 80 90 70 68 59 78 60 78 34 37 34 22 22 19 22 44 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-694,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-949,1741,l),
(-978,1752,o),
(-995,1780,o),
(-995,1806,cs),
(-995,1852,o),
(-943,1868,o),
(-883,1868,cs),
(-819,1868,o),
(-750,1850,o),
(-726,1832,c),
(-665,1989,l),
(-726,2036,o),
(-839,2070,o),
(-951,2070,cs),
(-1122,2070,o),
(-1241,1973,o),
(-1241,1835,cs),
(-1241,1766,o),
(-1204,1700,o),
(-1153,1674,c)
);
},
{
closed = 1;
nodes = (
(-834,1240,o),
(-736,1264,o),
(-691,1301,c),
(-737,1453,l),
(-768,1440,o),
(-822,1431,o),
(-868,1431,cs),
(-960,1431,o),
(-1004,1456,o),
(-1004,1501,cs),
(-1004,1544,o),
(-960,1571,o),
(-868,1571,cs),
(-822,1571,o),
(-768,1562,o),
(-736,1548,c),
(-691,1701,l),
(-734,1736,o),
(-832,1762,o),
(-919,1762,cs),
(-1132,1762,o),
(-1260,1667,o),
(-1260,1501,cs),
(-1260,1335,o),
(-1134,1240,o),
(-919,1240,cs)
);
},
{
closed = 1;
nodes = (
(-228,1240,o),
(-130,1339,o),
(-130,1481,cs),
(-130,1623,o),
(-228,1722,o),
(-375,1722,cs),
(-522,1722,o),
(-620,1623,o),
(-620,1481,cs),
(-620,1339,o),
(-522,1240,o),
(-375,1240,cs)
);
},
{
closed = 1;
nodes = (
(-425,1397,o),
(-454,1431,o),
(-454,1481,cs),
(-454,1531,o),
(-425,1565,o),
(-375,1565,cs),
(-325,1565,o),
(-296,1531,o),
(-296,1481,cs),
(-296,1431,o),
(-325,1397,o),
(-375,1397,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 9 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 13 9 2 4 12 1 6 5 4 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 7 8 112 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 4 3 2 4 128 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
80 79 60 59 86 84 79 90 80 90 70 68 59 78 60 78 34 37 34 22 22 19 22 44 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-675,1118);
}
);
hints = (
{
horizontal = 1;
origin = (2,11);
target = (1,6);
type = Stem;
},
{
horizontal = 1;
origin = (3,5);
target = (2,5);
type = Stem;
},
{
horizontal = 1;
origin = (0,6);
target = (0,13);
type = Stem;
},
{
horizontal = 1;
origin = (1,12);
target = (1,19);
type = Stem;
},
{
horizontal = 1;
origin = (2,11);
target = (3,11);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-942,1681,l),
(-990,1703,o),
(-1022,1750,o),
(-1022,1801,cs),
(-1022,1867,o),
(-965,1895,o),
(-889,1895,cs),
(-821,1895,o),
(-746,1874,o),
(-708,1846,c),
(-662,1954,l),
(-726,2001,o),
(-822,2029,o),
(-918,2029,cs),
(-1082,2029,o),
(-1188,1942,o),
(-1188,1813,cs),
(-1188,1741,o),
(-1154,1672,o),
(-1090,1641,c)
);
},
{
closed = 1;
nodes = (
(-838,1240,o),
(-742,1262,o),
(-680,1304,c),
(-717,1426,l),
(-781,1391,o),
(-853,1371,o),
(-917,1371,cs),
(-1004,1371,o),
(-1049,1408,o),
(-1049,1474,cs),
(-1049,1540,o),
(-1004,1577,o),
(-917,1577,cs),
(-853,1577,o),
(-778,1557,o),
(-714,1522,c),
(-680,1643,l),
(-742,1685,o),
(-838,1707,o),
(-931,1707,cs),
(-1103,1707,o),
(-1211,1617,o),
(-1211,1474,cs),
(-1211,1330,o),
(-1103,1240,o),
(-931,1240,cs)
);
},
{
closed = 1;
nodes = (
(-229,1240,o),
(-139,1333,o),
(-139,1466,cs),
(-139,1599,o),
(-229,1692,o),
(-357,1692,cs),
(-485,1692,o),
(-575,1599,o),
(-575,1466,cs),
(-575,1333,o),
(-485,1240,o),
(-357,1240,cs)
);
},
{
closed = 1;
nodes = (
(-415,1356,o),
(-455,1401,o),
(-455,1466,cs),
(-455,1531,o),
(-415,1576,o),
(-357,1576,cs),
(-299,1576,o),
(-259,1531,o),
(-259,1466,cs),
(-259,1401,o),
(-299,1356,o),
(-357,1356,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 4 3 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 16 values pushed */
20 1 3 1 33 32 2 4 2 38 10 2 6 9 3 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 13 9 2 4 12 1 6 5 4 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 11 2 8 0 10 0 8 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 7 8 112 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 64 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 114 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 65 values pushed */
0 2 3 4 3 2 114 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 2 3 4 3 2 4 128 0 5 6 8 6 5 8 128 0 8 11 6 8 11 126 0 4 9 6 4 89 13 1 9 12 1 6 5 9 6 105 14 1 11 0 10 0 11 10 105 0 7 0 0 7 0 102 0 3 3 1 97 0 1 1 39 3 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
80 79 60 59 86 84 79 90 80 90 70 68 59 78 60 78 34 37 34 22 22 19 22 44 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE393;
production = uni1004103A1036;
script = myanmar;
subCategory = Nonspacing;
}
