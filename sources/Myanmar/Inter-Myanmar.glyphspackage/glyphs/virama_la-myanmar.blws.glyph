{
glyphname = "virama_la-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottom;
pos = (-660,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-900,-888,o),
(-846,-877,o),
(-808,-859,c),
(-820,-820,l),
(-856,-838,o),
(-903,-849,o),
(-950,-849,cs),
(-1119,-849,o),
(-1225,-728,o),
(-1225,-534,cs),
(-1225,-345,o),
(-1128,-226,o),
(-973,-226,cs),
(-803,-226,o),
(-745,-380,o),
(-688,-540,cs),
(-627,-712,o),
(-560,-888,o),
(-350,-888,cs),
(-170,-888,o),
(-57,-754,o),
(-57,-540,cs),
(-57,-323,o),
(-178,-186,o),
(-371,-186,cs),
(-421,-186,o),
(-477,-197,o),
(-515,-214,c),
(-502,-255,l),
(-466,-237,o),
(-418,-226,o),
(-371,-226,cs),
(-203,-226,o),
(-97,-347,o),
(-97,-540,cs),
(-97,-729,o),
(-194,-848,o),
(-349,-848,cs),
(-530,-848,o),
(-589,-688,o),
(-647,-526,cs),
(-707,-357,o),
(-770,-186,o),
(-971,-186,cs),
(-1152,-186,o),
(-1265,-320,o),
(-1265,-534,cs),
(-1265,-751,o),
(-1144,-888,o),
(-950,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 3 1 97 6 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 1 1 3 89 0 3 3 1 97 6 1 1 3 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 35 21 36 37 61 35 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-694,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-964,-888,o),
(-904,-877,o),
(-863,-860,c),
(-909,-685,l),
(-932,-693,o),
(-961,-697,o),
(-983,-697,cs),
(-1102,-697,o),
(-1141,-604,o),
(-1141,-516,cs),
(-1141,-402,o),
(-1087,-333,o),
(-1001,-333,cs),
(-909,-333,o),
(-863,-397,o),
(-807,-543,cs),
(-746,-702,o),
(-672,-888,o),
(-381,-888,cs),
(-150,-888,o),
(-6,-738,o),
(-6,-497,cs),
(-6,-266,o),
(-143,-122,o),
(-361,-122,cs),
(-424,-122,o),
(-484,-132,o),
(-525,-149,c),
(-479,-325,l),
(-456,-317,o),
(-427,-312,o),
(-405,-312,cs),
(-286,-312,o),
(-247,-405,o),
(-247,-493,cs),
(-247,-607,o),
(-301,-677,o),
(-387,-677,cs),
(-479,-677,o),
(-526,-616,o),
(-581,-469,cs),
(-641,-309,o),
(-716,-122,o),
(-1007,-122,cs),
(-1238,-122,o),
(-1382,-271,o),
(-1382,-512,cs),
(-1382,-743,o),
(-1245,-888,o),
(-1027,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 3 1 97 6 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 1 1 3 89 0 3 3 1 97 6 1 1 3 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 35 21 36 37 61 35 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-675,0);
}
);
hints = (
{
horizontal = 1;
origin = (0,49);
target = (0,37);
type = Stem;
},
{
horizontal = 1;
origin = (0,31);
target = (0,43);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-926,-888,o),
(-870,-877,o),
(-830,-859,c),
(-856,-742,l),
(-887,-756,o),
(-927,-764,o),
(-964,-764,cs),
(-1113,-764,o),
(-1172,-681,o),
(-1172,-530,cs),
(-1172,-376,o),
(-1107,-289,o),
(-985,-289,cs),
(-846,-289,o),
(-802,-389,o),
(-746,-544,cs),
(-686,-711,o),
(-605,-888,o),
(-363,-888,cs),
(-162,-888,o),
(-37,-751,o),
(-37,-526,cs),
(-37,-303,o),
(-164,-165,o),
(-367,-165,cs),
(-423,-165,o),
(-480,-176,o),
(-519,-193,c),
(-493,-312,l),
(-462,-298,o),
(-422,-289,o),
(-385,-289,cs),
(-237,-289,o),
(-177,-373,o),
(-177,-524,cs),
(-177,-678,o),
(-242,-764,o),
(-365,-764,cs),
(-510,-764,o),
(-554,-662,o),
(-611,-506,cs),
(-671,-343,o),
(-749,-165,o),
(-986,-165,cs),
(-1187,-165,o),
(-1312,-303,o),
(-1312,-528,cs),
(-1312,-751,o),
(-1185,-888,o),
(-981,-888,cs)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 6 values pushed */
16 1 1 3 1 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 22 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 3 1 97 6 1 1 1 40 1 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 27 values pushed */
5 1 2 4 1 0 3 2 0 105 0 3 1 1 3 89 0 3 3 1 97 6 1 1 3 1 81 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 10 values pushed */
37 35 21 36 37 61 35 7 8 29 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE01C.blws;
}
