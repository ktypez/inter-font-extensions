{
glyphname = "virama_nnya-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottom;
pos = (-660,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-210,-888,ls),
(-128,-888,o),
(-77,-845,o),
(-77,-776,cs),
(-77,-717,l),
(-117,-717,l),
(-117,-763,ls),
(-117,-818,o),
(-154,-848,o),
(-220,-848,cs),
(-1113,-848,ls),
(-1179,-848,o),
(-1216,-818,o),
(-1216,-763,cs),
(-1216,-607,l),
(-1244,-614,l),
(-1196,-679,o),
(-1088,-720,o),
(-962,-720,cs),
(-753,-720,o),
(-621,-617,o),
(-621,-453,cs),
(-621,-289,o),
(-753,-186,o),
(-962,-186,cs),
(-1097,-186,o),
(-1211,-240,o),
(-1256,-325,c),
(-1216,-334,l),
(-1169,-268,o),
(-1072,-226,o),
(-962,-226,cs),
(-776,-226,o),
(-661,-314,o),
(-661,-453,cs),
(-661,-592,o),
(-776,-680,o),
(-962,-680,cs),
(-1081,-680,o),
(-1182,-638,o),
(-1228,-572,c),
(-1256,-581,l),
(-1256,-776,ls),
(-1256,-845,o),
(-1205,-888,o),
(-1123,-888,cs)
);
},
{
closed = 1;
nodes = (
(-198,-720,o),
(-66,-617,o),
(-66,-453,cs),
(-66,-289,o),
(-198,-186,o),
(-408,-186,cs),
(-443,-186,o),
(-485,-191,o),
(-515,-199,c),
(-499,-236,l),
(-469,-230,o),
(-433,-226,o),
(-408,-226,cs),
(-222,-226,o),
(-106,-314,o),
(-106,-453,cs),
(-106,-592,o),
(-222,-680,o),
(-408,-680,cs),
(-526,-680,o),
(-628,-638,o),
(-675,-572,c),
(-690,-614,l),
(-641,-676,o),
(-533,-720,o),
(-408,-720,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 7 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 12 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 2 3 114 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 12 7 8 7 12 114 0 8 5 7 8 5 126 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 11 1 7 12 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
83 81 77 75 73 72 66 64 59 57 35 36 35 23 52 34 53 36 34 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-694,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-295,-888,ls),
(-121,-888,o),
(-11,-804,o),
(-11,-670,cs),
(-11,-644,l),
(-207,-644,l),
(-207,-663,ls),
(-207,-708,o),
(-246,-736,o),
(-307,-736,cs),
(-1043,-736,ls),
(-1105,-736,o),
(-1144,-708,o),
(-1144,-663,cs),
(-1144,-556,l),
(-1205,-567,l),
(-1144,-606,o),
(-1069,-630,o),
(-978,-630,cs),
(-745,-630,o),
(-591,-529,o),
(-591,-377,cs),
(-591,-220,o),
(-750,-122,o),
(-1003,-122,cs),
(-1213,-122,o),
(-1357,-192,o),
(-1377,-303,c),
(-1173,-338,l),
(-1164,-304,o),
(-1099,-282,o),
(-1003,-282,cs),
(-894,-282,o),
(-826,-319,o),
(-826,-377,cs),
(-826,-435,o),
(-894,-471,o),
(-1003,-471,cs),
(-1086,-471,o),
(-1144,-454,o),
(-1154,-427,c),
(-1358,-463,l),
(-1358,-670,ls),
(-1358,-804,o),
(-1249,-888,o),
(-1075,-888,cs)
);
},
{
closed = 1;
nodes = (
(-169,-630,o),
(-28,-526,o),
(-28,-372,cs),
(-28,-219,o),
(-162,-122,o),
(-375,-122,cs),
(-438,-122,o),
(-497,-130,o),
(-537,-141,c),
(-491,-277,l),
(-471,-272,o),
(-442,-269,o),
(-420,-269,cs),
(-328,-269,o),
(-263,-310,o),
(-263,-369,cs),
(-263,-429,o),
(-331,-471,o),
(-427,-471,cs),
(-516,-471,o),
(-593,-443,o),
(-612,-404,c),
(-757,-481,l),
(-708,-574,o),
(-569,-630,o),
(-396,-630,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 7 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 12 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 2 3 114 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 12 7 8 7 12 114 0 8 5 7 8 5 126 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 11 1 7 12 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
83 81 77 75 73 72 66 64 59 57 35 36 35 23 52 34 53 36 34 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-675,0);
}
);
hints = (
{
horizontal = 1;
origin = (0,45);
target = (0,10);
type = Stem;
},
{
horizontal = 1;
origin = (1,25);
target = (1,22);
type = Stem;
},
{
horizontal = 1;
origin = (1,12);
target = (1,5);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-240,-888,ls),
(-122,-888,o),
(-48,-829,o),
(-48,-734,cs),
(-48,-688,l),
(-169,-688,l),
(-169,-723,ls),
(-169,-769,o),
(-209,-780,o),
(-271,-780,cs),
(-1064,-780,ls),
(-1126,-780,o),
(-1166,-769,o),
(-1166,-723,cs),
(-1166,-580,l),
(-1227,-588,l),
(-1174,-643,o),
(-1074,-677,o),
(-967,-677,cs),
(-745,-677,o),
(-607,-580,o),
(-607,-426,cs),
(-607,-266,o),
(-749,-165,o),
(-977,-165,cs),
(-1141,-165,o),
(-1267,-225,o),
(-1302,-320,c),
(-1198,-360,l),
(-1166,-307,o),
(-1081,-273,o),
(-977,-273,cs),
(-835,-273,o),
(-745,-332,o),
(-745,-426,cs),
(-745,-514,o),
(-835,-569,o),
(-977,-569,cs),
(-1081,-569,o),
(-1166,-537,o),
(-1198,-487,c),
(-1295,-507,l),
(-1295,-734,ls),
(-1295,-829,o),
(-1221,-888,o),
(-1103,-888,cs)
);
},
{
closed = 1;
nodes = (
(-184,-677,o),
(-48,-579,o),
(-48,-424,cs),
(-48,-265,o),
(-181,-165,o),
(-392,-165,cs),
(-437,-165,o),
(-487,-171,o),
(-521,-180,c),
(-493,-283,l),
(-467,-277,o),
(-435,-273,o),
(-410,-273,cs),
(-273,-273,o),
(-187,-327,o),
(-187,-423,cs),
(-187,-526,o),
(-274,-569,o),
(-413,-569,cs),
(-513,-569,o),
(-598,-545,o),
(-661,-477,c),
(-727,-569,l),
(-677,-631,o),
(-543,-677,o),
(-400,-677,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 7 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
54 1 8 12 61 1 5 8 32 1 3 6 11 1 0 3 24 12 2 2 0 5 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 54 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 2 3 114 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 2 4 96 0 4 4 40 4 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 7 5 7 8 5 128 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 12 11 2 7 8 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 65 values pushed */
0 12 7 8 7 12 114 0 8 5 7 8 5 126 0 5 6 7 5 6 126 0 3 6 0 6 3 0 128 13 1 9 11 1 7 12 9 7 105 10 1 6 1 1 0 2 6 0 105 0 2 4 4 2 87 0 2 2 4 96 0 4 2 4 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
83 81 77 75 73 72 66 64 59 57 35 36 35 23 52 34 53 36 34 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE00A.blws;
}
