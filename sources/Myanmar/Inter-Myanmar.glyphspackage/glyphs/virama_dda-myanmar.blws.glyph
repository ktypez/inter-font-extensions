{
glyphname = "virama_dda-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottom;
pos = (-660,0);
},
{
name = _bottomright;
pos = (-424,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-489,-738,o),
(-325,-642,o),
(-325,-462,cs),
(-325,-282,o),
(-489,-186,o),
(-661,-186,cs),
(-813,-186,o),
(-943,-255,o),
(-998,-366,c),
(-961,-377,l),
(-908,-284,o),
(-792,-225,o),
(-662,-225,cs),
(-513,-225,o),
(-365,-306,o),
(-365,-462,cs),
(-365,-618,o),
(-513,-699,o),
(-662,-699,cs),
(-792,-699,o),
(-908,-640,o),
(-961,-547,c),
(-998,-558,l),
(-943,-669,o),
(-813,-738,o),
(-661,-738,cs)
);
},
{
closed = 1;
nodes = (
(-239,-888,l),
(-239,-850,l),
(-331,-850,l),
(-331,-688,l),
(-366,-688,l),
(-436,-749,o),
(-550,-787,o),
(-661,-787,cs),
(-789,-787,o),
(-902,-748,o),
(-956,-685,c),
(-982,-716,l),
(-915,-784,o),
(-791,-827,o),
(-661,-827,cs),
(-551,-827,o),
(-439,-793,o),
(-371,-739,c),
(-371,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 5 4 52 1 11 1 44 1 7 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 11 8 114 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 7 11 6 11 7 6 128 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 7 6 11 89 0 11 11 6 96 0 6 11 6 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
69 67 65 64 60 59 23 19 35 36 38 35 20 38 35 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-694,0);
},
{
name = _bottomright;
pos = (-424,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-436,-640,o),
(-273,-544,o),
(-273,-381,cs),
(-273,-218,o),
(-437,-122,o),
(-694,-122,cs),
(-908,-122,o),
(-1056,-195,o),
(-1076,-310,c),
(-867,-347,l),
(-855,-298,o),
(-788,-267,o),
(-694,-267,cs),
(-585,-267,o),
(-515,-308,o),
(-515,-381,cs),
(-515,-455,o),
(-585,-495,o),
(-694,-495,cs),
(-788,-495,o),
(-854,-465,o),
(-867,-416,c),
(-1076,-453,l),
(-1056,-568,o),
(-908,-640,o),
(-694,-640,cs)
);
},
{
closed = 1;
nodes = (
(-211,-888,l),
(-211,-779,l),
(-317,-779,l),
(-317,-671,l),
(-521,-671,l),
(-557,-680,o),
(-605,-683,o),
(-659,-683,cs),
(-783,-683,o),
(-936,-661,o),
(-1031,-611,c),
(-1031,-739,l),
(-927,-790,o),
(-810,-808,o),
(-697,-808,cs),
(-636,-808,o),
(-577,-803,o),
(-521,-795,c),
(-521,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 5 4 52 1 11 1 44 1 7 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 11 8 114 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 7 11 6 11 7 6 128 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 7 6 11 89 0 11 11 6 96 0 6 11 6 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
69 67 65 64 60 59 23 19 35 36 38 35 20 38 35 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-675,0);
},
{
name = _bottomright;
pos = (-424,0);
}
);
hints = (
{
horizontal = 1;
origin = (1,18);
target = (1,2);
type = Stem;
},
{
horizontal = 1;
origin = (0,25);
target = (0,18);
type = Stem;
},
{
horizontal = 1;
origin = (0,12);
target = (0,5);
type = Stem;
},
{
horizontal = 1;
origin = (1,18);
target = (1,4);
type = Stem;
},
{
horizontal = 1;
origin = (1,14);
target = (1,7);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-463,-699,o),
(-320,-595,o),
(-320,-430,cs),
(-320,-267,o),
(-463,-165,o),
(-690,-165,cs),
(-867,-165,o),
(-1004,-236,o),
(-1045,-349,c),
(-919,-370,l),
(-890,-310,o),
(-802,-273,o),
(-691,-273,cs),
(-549,-273,o),
(-460,-334,o),
(-460,-430,cs),
(-460,-529,o),
(-549,-591,o),
(-691,-591,cs),
(-802,-591,o),
(-890,-554,o),
(-919,-495,c),
(-1045,-516,l),
(-1004,-628,o),
(-867,-699,o),
(-690,-699,cs)
);
},
{
closed = 1;
nodes = (
(-237,-888,l),
(-237,-822,l),
(-335,-822,l),
(-335,-691,l),
(-437,-691,l),
(-491,-729,o),
(-581,-748,o),
(-674,-748,cs),
(-793,-748,o),
(-918,-717,o),
(-983,-655,c),
(-1016,-736,l),
(-939,-802,o),
(-809,-834,o),
(-686,-834,cs),
(-596,-834,o),
(-509,-817,o),
(-450,-782,c),
(-450,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 14 values pushed */
0 1 5 4 52 1 11 1 44 1 7 11 3 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
15 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 58 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 11 8 114 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 112 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 0 6 11 6 100 0 7 7 40 7 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 71 values pushed */
0 5 4 2 4 5 2 128 0 2 3 4 2 3 126 10 1 8 3 9 3 8 9 128 0 9 1 3 9 1 126 0 7 11 6 11 7 6 128 0 0 0 4 5 0 4 105 0 3 0 1 11 3 1 105 0 11 7 6 11 89 0 11 11 6 96 0 6 11 6 80 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
69 67 65 64 60 59 23 19 35 36 38 35 20 38 35 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE00D.blws;
}
