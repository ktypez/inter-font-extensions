{
glyphname = "exclam-shan";
layers = (
{
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(1435,-888,o),
(1516,-802,o),
(1516,-666,cs),
(1516,793,ls),
(1516,986,o),
(1370,1115,o),
(1225,1243,cs),
(1085,1366,o),
(947,1489,o),
(947,1666,cs),
(947,1835,o),
(1059,1944,o),
(1242,1944,cs),
(1343,1944,o),
(1450,1911,o),
(1540,1849,c),
(1565,1881,l),
(1474,1947,o),
(1358,1984,o),
(1241,1984,cs),
(1033,1984,o),
(907,1859,o),
(907,1664,cs),
(907,1472,o),
(1052,1342,o),
(1195,1216,cs),
(1334,1093,o),
(1470,971,o),
(1470,795,cs),
(1470,-665,ls),
(1470,-774,o),
(1407,-843,o),
(1306,-843,cs),
(1205,-843,o),
(1142,-774,o),
(1142,-665,cs),
(1142,554,ls),
(1142,911,o),
(986,1142,o),
(657,1142,cs),
(346,1142,o),
(150,910,o),
(150,541,cs),
(150,321,o),
(252,103,o),
(414,-24,c),
(448,7,l),
(293,126,o),
(196,331,o),
(196,541,cs),
(196,883,o),
(374,1097,o),
(657,1097,cs),
(957,1097,o),
(1096,882,o),
(1096,554,cs),
(1096,-666,ls),
(1096,-802,o),
(1177,-888,o),
(1306,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 4 5 21 1 2 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 5 10 5 4 10 128 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 5 5 3 97 0 3 3 39 77 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 10 5 4 10 128 0 3 0 5 4 3 5 105 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
0 0 88 86 82 80 74 73 70 68 58 57 40 39 37 35 32 30 16 15 0 7 0 7 19 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 1686;
},
{
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(1707,-888,o),
(1881,-737,o),
(1881,-512,cs),
(1881,903,ls),
(1881,1231,o),
(1708,1373,o),
(1574,1483,cs),
(1491,1551,o),
(1423,1607,o),
(1423,1687,cs),
(1423,1779,o),
(1507,1828,o),
(1606,1828,cs),
(1686,1828,o),
(1775,1800,o),
(1839,1735,c),
(1975,1911,l),
(1889,2011,o),
(1717,2074,o),
(1528,2074,cs),
(1255,2074,o),
(1084,1925,o),
(1084,1701,cs),
(1084,1497,o),
(1204,1382,o),
(1322,1272,cs),
(1434,1167,o),
(1541,1064,o),
(1541,890,cs),
(1541,-495,ls),
(1541,-571,o),
(1495,-623,o),
(1414,-623,cs),
(1333,-623,o),
(1287,-571,o),
(1287,-495,cs),
(1287,618,ls),
(1287,940,o),
(1085,1142,o),
(694,1142,cs),
(321,1142,o),
(86,909,o),
(86,538,cs),
(86,291,o),
(197,74,o),
(375,-24,c),
(602,186,l),
(509,245,o),
(452,380,o),
(452,537,cs),
(452,712,o),
(545,822,o),
(694,822,cs),
(853,822,o),
(927,720,o),
(927,567,cs),
(927,-512,ls),
(927,-737,o),
(1101,-888,o),
(1404,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 4 5 21 1 2 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 5 10 5 4 10 128 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 5 5 3 97 0 3 3 39 77 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 10 5 4 10 128 0 3 0 5 4 3 5 105 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
0 0 88 86 82 80 74 73 70 68 58 57 40 39 37 35 32 30 16 15 0 7 0 7 19 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 1997;
},
{
hints = (
{
horizontal = 1;
origin = (0,59);
target = (0,32);
type = Stem;
},
{
horizontal = 1;
origin = (0,45);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = (0,39);
target = (0,52);
type = Stem;
},
{
horizontal = 1;
origin = (0,12);
target = (0,19);
type = Stem;
},
{
origin = (0,42);
target = (0,49);
type = Stem;
},
{
origin = (0,56);
target = (0,36);
type = Stem;
},
{
origin = (0,29);
target = (0,3);
type = Stem;
},
{
origin = (0,22);
target = (0,9);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(1531,-888,o),
(1640,-788,o),
(1640,-608,cs),
(1640,846,ls),
(1640,1089,o),
(1482,1230,o),
(1339,1357,cs),
(1223,1460,o),
(1117,1556,o),
(1117,1689,cs),
(1117,1812,o),
(1219,1889,o),
(1382,1889,cs),
(1470,1889,o),
(1557,1861,o),
(1609,1816,c),
(1690,1922,l),
(1612,1988,o),
(1486,2029,o),
(1363,2029,cs),
(1112,2029,o),
(955,1900,o),
(955,1694,cs),
(955,1493,o),
(1089,1368,o),
(1221,1246,cs),
(1346,1130,o),
(1468,1016,o),
(1468,842,cs),
(1468,-605,ls),
(1468,-701,o),
(1420,-755,o),
(1335,-755,cs),
(1250,-755,o),
(1202,-701,o),
(1202,-605,cs),
(1202,580,ls),
(1202,923,o),
(1017,1142,o),
(675,1142,cs),
(338,1142,o),
(126,910,o),
(126,540,cs),
(126,309,o),
(224,107,o),
(400,-24,c),
(521,87,l),
(375,204,o),
(300,358,o),
(300,539,cs),
(300,811,o),
(445,982,o),
(675,982,cs),
(893,982,o),
(1030,819,o),
(1030,559,cs),
(1030,-608,ls),
(1030,-788,o),
(1139,-888,o),
(1335,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 10 values pushed */
34 1 4 5 21 1 2 9 2 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 55 values pushed */
0 4 5 10 5 4 10 128 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 5 5 3 97 0 3 3 39 77 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 53 values pushed */
0 4 5 10 5 4 10 128 0 3 0 5 4 3 5 105 0 8 0 0 1 8 0 105 0 2 0 6 2 6 101 0 7 7 10 97 0 10 10 37 77 11 1 1 1 9 97 0 9 9 38 9 78 
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 28 values pushed */
0 0 88 86 82 80 74 73 70 68 58 57 40 39 37 35 32 30 16 15 0 7 0 7 19 12 8 23 
CALL[ ]	/* CallFunction */";
};
width = 1790;
}
);
note = uni109F;
unicode = 4255;
}
