{
category = Mark;
glyphname = "kinzi_iiMark-myanmar";
layers = (
{
anchors = (
{
name = _top;
pos = (-660,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-1072,1631,l),
(-1130,1657,o),
(-1165,1716,o),
(-1165,1783,cs),
(-1165,1881,o),
(-1090,1945,o),
(-966,1945,cs),
(-888,1945,o),
(-815,1918,o),
(-771,1876,c),
(-761,1913,l),
(-818,1959,o),
(-888,1984,o),
(-969,1984,cs),
(-1113,1984,o),
(-1205,1905,o),
(-1205,1784,cs),
(-1205,1707,o),
(-1168,1641,o),
(-1107,1609,c)
);
},
{
closed = 1;
nodes = (
(-899,1240,o),
(-807,1268,o),
(-767,1306,c),
(-777,1344,l),
(-836,1304,o),
(-916,1280,o),
(-990,1280,cs),
(-1111,1280,o),
(-1184,1345,o),
(-1184,1451,cs),
(-1184,1557,o),
(-1111,1622,o),
(-990,1622,cs),
(-916,1622,o),
(-836,1598,o),
(-777,1558,c),
(-767,1596,l),
(-807,1634,o),
(-899,1662,o),
(-987,1662,cs),
(-1135,1662,o),
(-1224,1583,o),
(-1224,1451,cs),
(-1224,1319,o),
(-1135,1240,o),
(-987,1240,cs)
);
},
{
closed = 1;
nodes = (
(-212,1240,o),
(-94,1384,o),
(-94,1590,cs),
(-94,1796,o),
(-212,1940,o),
(-414,1940,cs),
(-616,1940,o),
(-734,1796,o),
(-734,1590,cs),
(-734,1384,o),
(-616,1240,o),
(-414,1240,cs)
);
},
{
closed = 1;
nodes = (
(-592,1280,o),
(-694,1408,o),
(-694,1590,cs),
(-694,1772,o),
(-592,1900,o),
(-414,1900,cs),
(-236,1900,o),
(-134,1772,o),
(-134,1590,cs),
(-134,1408,o),
(-236,1280,o),
(-414,1280,cs)
);
},
{
closed = 1;
nodes = (
(-643,1499,o),
(-562,1558,o),
(-414,1558,cs),
(-266,1558,o),
(-185,1499,o),
(-153,1447,c),
(-134,1488,l),
(-197,1552,o),
(-283,1598,o),
(-414,1598,cs),
(-545,1598,o),
(-631,1552,o),
(-694,1488,c),
(-675,1447,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
55 1 2 1 68 67 2 10 8 45 1 3 10 73 1 12 3 25 20 2 4 11 31 1 5 14 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 5 14 114 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 8 2 10 2 8 10 128 0 11 12 4 12 11 4 128 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
93 91 89 87 82 80 78 77 71 70 64 63 22 44 35 34 37 37 36 36 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-694,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-1084,1741,l),
(-1113,1752,o),
(-1130,1780,o),
(-1130,1806,cs),
(-1130,1852,o),
(-1078,1868,o),
(-1018,1868,cs),
(-954,1868,o),
(-885,1850,o),
(-861,1832,c),
(-800,1989,l),
(-861,2036,o),
(-974,2070,o),
(-1086,2070,cs),
(-1257,2070,o),
(-1376,1973,o),
(-1376,1835,cs),
(-1376,1766,o),
(-1339,1700,o),
(-1288,1674,c)
);
},
{
closed = 1;
nodes = (
(-969,1240,o),
(-871,1264,o),
(-826,1301,c),
(-872,1453,l),
(-903,1440,o),
(-957,1431,o),
(-1003,1431,cs),
(-1095,1431,o),
(-1139,1456,o),
(-1139,1501,cs),
(-1139,1544,o),
(-1095,1571,o),
(-1003,1571,cs),
(-957,1571,o),
(-903,1562,o),
(-871,1548,c),
(-826,1701,l),
(-869,1736,o),
(-967,1762,o),
(-1054,1762,cs),
(-1267,1762,o),
(-1395,1667,o),
(-1395,1501,cs),
(-1395,1335,o),
(-1269,1240,o),
(-1054,1240,cs)
);
},
{
closed = 1;
nodes = (
(-134,1240,o),
(6,1415,o),
(6,1655,cs),
(6,1897,o),
(-134,2070,o),
(-384,2070,cs),
(-631,2070,o),
(-774,1897,o),
(-774,1655,cs),
(-774,1411,o),
(-631,1240,o),
(-384,1240,cs)
);
},
{
closed = 1;
nodes = (
(-493,1438,o),
(-561,1522,o),
(-561,1655,cs),
(-561,1788,o),
(-493,1872,o),
(-384,1872,cs),
(-275,1872,o),
(-207,1788,o),
(-207,1655,cs),
(-207,1522,o),
(-275,1438,o),
(-384,1438,cs)
);
},
{
closed = 1;
nodes = (
(-545,1531,o),
(-471,1576,o),
(-388,1576,cs),
(-305,1576,o),
(-231,1531,o),
(-186,1442,c),
(-110,1554,l),
(-167,1658,o),
(-265,1717,o),
(-388,1717,cs),
(-504,1717,o),
(-605,1662,o),
(-667,1554,c),
(-591,1442,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
55 1 2 1 68 67 2 10 8 45 1 3 10 73 1 12 3 25 20 2 4 11 31 1 5 14 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 5 14 114 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 8 2 10 2 8 10 128 0 11 12 4 12 11 4 128 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
93 91 89 87 82 80 78 77 71 70 64 63 22 44 35 34 37 37 36 36 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _top;
pos = (-675,1118);
}
);
hints = (
{
horizontal = 1;
origin = (2,11);
target = (1,6);
type = Stem;
},
{
horizontal = 1;
origin = (1,12);
target = (1,19);
type = Stem;
},
{
horizontal = 1;
origin = (3,5);
target = (2,5);
type = Stem;
},
{
horizontal = 1;
origin = (2,11);
target = (3,11);
type = Stem;
},
{
horizontal = 1;
origin = (0,6);
target = (0,13);
type = Stem;
},
{
horizontal = 1;
origin = (4,2);
target = (4,9);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-1048,1681,l),
(-1096,1703,o),
(-1128,1750,o),
(-1128,1801,cs),
(-1128,1867,o),
(-1071,1895,o),
(-995,1895,cs),
(-927,1895,o),
(-852,1874,o),
(-814,1846,c),
(-768,1954,l),
(-832,2001,o),
(-928,2029,o),
(-1024,2029,cs),
(-1188,2029,o),
(-1294,1942,o),
(-1294,1813,cs),
(-1294,1741,o),
(-1260,1672,o),
(-1196,1641,c)
);
},
{
closed = 1;
nodes = (
(-944,1240,o),
(-848,1262,o),
(-786,1304,c),
(-823,1426,l),
(-887,1391,o),
(-959,1371,o),
(-1023,1371,cs),
(-1110,1371,o),
(-1155,1408,o),
(-1155,1474,cs),
(-1155,1540,o),
(-1110,1577,o),
(-1023,1577,cs),
(-959,1577,o),
(-884,1557,o),
(-820,1522,c),
(-786,1643,l),
(-848,1685,o),
(-944,1707,o),
(-1037,1707,cs),
(-1209,1707,o),
(-1317,1617,o),
(-1317,1474,cs),
(-1317,1330,o),
(-1209,1240,o),
(-1037,1240,cs)
);
},
{
closed = 1;
nodes = (
(-162,1240,o),
(-32,1398,o),
(-32,1623,cs),
(-32,1848,o),
(-162,2006,o),
(-383,2006,cs),
(-604,2006,o),
(-734,1848,o),
(-734,1623,cs),
(-734,1398,o),
(-604,1240,o),
(-383,1240,cs)
);
},
{
closed = 1;
nodes = (
(-521,1376,o),
(-592,1479,o),
(-592,1623,cs),
(-592,1768,o),
(-521,1870,o),
(-383,1870,cs),
(-246,1870,o),
(-174,1768,o),
(-174,1623,cs),
(-174,1478,o),
(-246,1376,o),
(-383,1376,cs)
);
},
{
closed = 1;
nodes = (
(-561,1486,o),
(-481,1525,o),
(-384,1525,cs),
(-287,1525,o),
(-208,1486,o),
(-165,1413,c),
(-95,1516,l),
(-162,1602,o),
(-257,1649,o),
(-384,1649,cs),
(-515,1649,o),
(-608,1598,o),
(-673,1516,c),
(-604,1413,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 28 values pushed */
55 1 2 1 68 67 2 10 8 45 1 3 10 73 1 12 3 25 20 2 4 11 31 1 5 14 6 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 5 14 114 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 60 values pushed */
0 8 2 10 2 8 114 0 11 12 4 12 11 114 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 62 values pushed */
0 8 2 10 2 8 10 128 0 11 12 4 12 11 4 128 0 14 4 5 4 14 5 128 0 10 0 12 11 10 12 105 0 3 0 4 14 3 4 105 13 1 5 6 1 0 5 0 102 9 1 2 2 1 97 7 1 1 1 39 2 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
93 91 89 87 82 80 78 77 71 70 64 63 22 44 35 34 37 37 36 36 34 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE392;
production = uni1004103A102E;
script = myanmar;
subCategory = Nonspacing;
}
