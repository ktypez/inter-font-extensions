{
glyphname = "jha-mon";
layers = (
{
anchors = (
{
name = bottom;
pos = (505,0);
},
{
name = bottomright;
pos = (528,0);
},
{
name = hamedial;
pos = (592,0);
},
{
name = hamedial_sh;
pos = (543,0);
},
{
name = top;
pos = (1086,1118);
},
{
name = wamedial;
pos = (512,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(908,-24,o),
(1073,81,o),
(1165,249,c),
(1124,266,l),
(1040,115,o),
(891,21,o),
(705,21,cs),
(396,21,o),
(196,234,o),
(196,557,cs),
(196,943,o),
(459,1097,o),
(704,1097,cs),
(916,1097,o),
(1079,981,o),
(1079,793,cs),
(1079,675,o),
(965,583,o),
(819,583,cs),
(680,583,o),
(614,653,o),
(614,724,cs),
(614,801,o),
(679,855,o),
(771,855,cs),
(956,855,o),
(1111,727,o),
(1239,470,c),
(1274,498,l),
(1136,765,o),
(969,897,o),
(768,897,cs),
(651,897,o),
(569,828,o),
(569,726,cs),
(569,632,o),
(650,539,o),
(818,539,cs),
(988,539,o),
(1121,652,o),
(1121,796,cs),
(1121,1012,o),
(936,1142,o),
(702,1142,cs),
(435,1142,o),
(150,975,o),
(150,558,cs),
(150,200,o),
(373,-24,o),
(705,-24,cs)
);
},
{
closed = 1;
nodes = (
(1542,-888,o),
(1672,-773,o),
(1672,-566,cs),
(1672,1118,l),
(1626,1118,l),
(1626,-565,ls),
(1626,-743,o),
(1512,-843,o),
(1309,-843,cs),
(1106,-843,o),
(992,-743,o),
(992,-565,cs),
(992,88,l),
(946,65,l),
(946,-566,ls),
(946,-773,o),
(1076,-888,o),
(1309,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
53 18 2 8 2 56 11 2 9 8 5 0 2 1 9 39 1 13 4 103 1 6 13 78 1 12 6 105 104 95 87 77 5 11 12 7 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 114 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 14 14 37 77 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
109 107 102 100 90 89 82 81 74 73 70 68 44 36 37 19 38 40 38 19 33 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1842;
},
{
anchors = (
{
name = bottom;
pos = (480,0);
},
{
name = bottomright;
pos = (428,0);
},
{
name = hamedial;
pos = (509,0);
},
{
name = hamedial_sh;
pos = (517,0);
},
{
name = top;
pos = (1232,1118);
},
{
name = wamedial;
pos = (425,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(865,-24,o),
(1104,13,o),
(1218,111,c),
(1026,345,l),
(1004,321,o),
(897,287,o),
(781,287,cs),
(625,287,o),
(452,350,o),
(452,585,cs),
(452,809,o),
(639,898,o),
(780,898,cs),
(956,898,o),
(1023,808,o),
(1023,722,cs),
(1023,641,o),
(965,559,o),
(867,559,cs),
(811,559,o),
(776,580,o),
(776,614,cs),
(776,648,o),
(806,669,o),
(853,669,cs),
(991,669,o),
(1096,521,o),
(1207,335,c),
(1382,466,l),
(1238,696,o),
(1029,840,o),
(840,840,cs),
(685,840,o),
(591,756,o),
(591,619,cs),
(591,491,o),
(696,400,o),
(874,400,cs),
(1124,400,o),
(1240,606,o),
(1240,736,cs),
(1240,978,o),
(1033,1142,o),
(710,1142,cs),
(351,1142,o),
(86,905,o),
(86,559,cs),
(86,208,o),
(339,-24,o),
(743,-24,cs)
);
},
{
closed = 1;
nodes = (
(1714,-888,o),
(1914,-725,o),
(1914,-482,cs),
(1914,1118,l),
(1574,1118,l),
(1574,-447,ls),
(1574,-555,o),
(1505,-623,o),
(1396,-623,cs),
(1287,-623,o),
(1218,-555,o),
(1218,-447,cs),
(1218,111,l),
(888,111,l),
(888,-482,ls),
(888,-725,o),
(1084,-888,o),
(1396,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
53 18 2 8 2 56 11 2 9 8 5 0 2 1 9 39 1 13 4 103 1 6 13 78 1 12 6 105 104 95 87 77 5 11 12 7 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 114 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 14 14 37 77 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
109 107 102 100 90 89 82 81 74 73 70 68 44 36 37 19 38 40 38 19 33 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2030;
},
{
anchors = (
{
name = bottom;
pos = (559,0);
},
{
name = bottomright;
pos = (528,0);
},
{
name = hamedial;
pos = (647,0);
},
{
name = hamedial_sh;
pos = (597,0);
},
{
name = top;
pos = (1170,1118);
},
{
name = wamedial;
pos = (550,0);
}
);
hints = (
{
horizontal = 1;
origin = (1,17);
target = (1,8);
type = Stem;
},
{
horizontal = 1;
origin = (0,49);
target = (0,6);
type = Stem;
},
{
horizontal = 1;
origin = (0,37);
target = (0,18);
type = Stem;
},
{
horizontal = 1;
origin = (0,24);
target = (0,31);
type = Stem;
},
{
horizontal = 1;
origin = (0,43);
target = (0,12);
type = Stem;
},
{
horizontal = 1;
origin = (1,4);
target = down;
type = TopGhost;
},
{
origin = (0,46);
target = (0,9);
type = Stem;
},
{
origin = (1,14);
target = (1,12);
type = Stem;
},
{
origin = (1,3);
target = (1,5);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(926,-24,o),
(1060,49,o),
(1148,166,c),
(1056,276,l),
(985,190,o),
(874,136,o),
(730,136,cs),
(473,136,o),
(300,307,o),
(300,568,cs),
(300,822,o),
(479,1000,o),
(734,1000,cs),
(919,1000,o),
(1049,903,o),
(1049,765,cs),
(1049,661,o),
(958,585,o),
(849,585,cs),
(762,585,o),
(707,622,o),
(707,680,cs),
(707,736,o),
(751,771,o),
(822,771,cs),
(990,771,o),
(1120,645,o),
(1243,416,c),
(1347,495,l),
(1206,747,o),
(1030,884,o),
(815,884,cs),
(672,884,o),
(573,809,o),
(573,683,cs),
(573,560,o),
(681,469,o),
(851,469,cs),
(1059,469,o),
(1184,634,o),
(1184,772,cs),
(1184,998,o),
(984,1142,o),
(705,1142,cs),
(354,1142,o),
(126,913,o),
(126,558,cs),
(126,205,o),
(364,-24,o),
(730,-24,cs)
);
},
{
closed = 1;
nodes = (
(1665,-888,o),
(1800,-738,o),
(1800,-514,cs),
(1800,1118,l),
(1628,1118,l),
(1628,-496,ls),
(1628,-645,o),
(1558,-748,o),
(1374,-748,cs),
(1200,-748,o),
(1120,-645,o),
(1120,-496,cs),
(1120,147,l),
(956,147,l),
(956,-514,ls),
(956,-738,o),
(1101,-888,o),
(1378,-888,cs)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 37 values pushed */
53 18 2 8 2 56 11 2 9 8 5 0 2 1 9 39 1 13 4 103 1 6 13 78 1 12 6 105 104 95 87 77 5 11 12 7 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
37 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 80 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 114 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 81 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 3 3 7 97 14 1 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 85 values pushed */
0 0 1 5 1 0 5 128 0 5 4 1 5 4 126 0 13 4 6 4 13 6 128 0 12 6 11 6 12 11 128 0 11 10 6 11 10 126 0 2 0 8 9 2 8 105 0 9 0 1 0 9 1 105 0 14 14 37 77 0 3 3 7 97 0 7 7 37 77 0 4 4 6 97 0 6 6 38 77 0 10 10 40 10 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
109 107 102 100 90 89 82 81 74 73 70 68 44 36 37 19 38 40 38 19 33 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 1990;
}
);
note = uni105B;
unicode = 4187;
}
