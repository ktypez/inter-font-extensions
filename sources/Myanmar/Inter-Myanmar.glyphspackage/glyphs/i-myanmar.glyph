{
glyphname = "i-myanmar";
layers = (
{
anchors = (
{
name = bottom;
pos = (1138,-818);
},
{
name = bottomright;
pos = (1630,-820);
},
{
name = hamedial;
pos = (1644,-820);
},
{
name = top;
pos = (1616,1118);
},
{
name = wamedial;
pos = (1616,-820);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(456,8,l),
(296,113,o),
(196,306,o),
(196,537,cs),
(196,878,o),
(381,1097,o),
(675,1097,cs),
(941,1097,o),
(1115,906,o),
(1115,623,cs),
(1115,221,l),
(1161,221,l),
(1161,623,ls),
(1161,909,o),
(1333,1097,o),
(1602,1097,cs),
(1892,1097,o),
(2080,875,o),
(2080,537,cs),
(2080,304,o),
(1981,114,o),
(1821,8,c),
(1852,-24,l),
(2020,74,o),
(2126,285,o),
(2126,538,cs),
(2126,901,o),
(1916,1142,o),
(1602,1142,cs),
(1356,1142,o),
(1170,991,o),
(1133,745,c),
(1144,745,l),
(1106,992,o),
(922,1142,o),
(675,1142,cs),
(362,1142,o),
(150,899,o),
(150,538,cs),
(150,283,o),
(256,74,o),
(424,-24,c)
);
},
{
closed = 1;
nodes = (
(625,-860,l),
(509,-794,o),
(437,-671,o),
(437,-512,cs),
(437,-280,o),
(567,-142,o),
(784,-142,cs),
(969,-142,o),
(1106,-258,o),
(1106,-388,cs),
(1106,-698,l),
(1153,-698,l),
(1153,-388,ls),
(1153,-256,o),
(1288,-142,o),
(1476,-142,cs),
(1689,-142,o),
(1823,-286,o),
(1823,-512,cs),
(1823,-676,o),
(1751,-793,o),
(1634,-860,c),
(1670,-888,l),
(1791,-826,o),
(1869,-685,o),
(1869,-509,cs),
(1869,-254,o),
(1720,-97,o),
(1475,-97,cs),
(1286,-97,o),
(1139,-208,o),
(1111,-350,c),
(1148,-350,l),
(1119,-209,o),
(975,-97,o),
(784,-97,cs),
(543,-97,o),
(390,-256,o),
(390,-509,cs),
(390,-688,o),
(467,-824,o),
(590,-888,c)
);
},
{
closed = 1;
nodes = (
(2120,-888,l),
(2120,-844,l),
(1806,-844,l),
(1634,-860,l),
(1634,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
54 1 2 1 8 1 0 2 98 1 6 8 75 71 70 3 10 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
123 122 115 114 103 101 47 45 37 36 46 39 24 41 37 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2276;
},
{
anchors = (
{
name = bottom;
pos = (1129,-820);
},
{
name = bottomright;
pos = (1559,-820);
},
{
name = hamedial;
pos = (1553,-820);
},
{
name = top;
pos = (1542,1118);
},
{
name = wamedial;
pos = (1564,-820);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(608,191,l),
(518,248,o),
(452,381,o),
(452,537,cs),
(452,706,o),
(560,822,o),
(703,822,cs),
(858,822,o),
(951,723,o),
(951,547,cs),
(951,221,l),
(1307,221,l),
(1307,547,ls),
(1307,723,o),
(1400,822,o),
(1555,822,cs),
(1698,822,o),
(1806,706,o),
(1806,537,cs),
(1806,381,o),
(1740,248,o),
(1650,191,c),
(1882,-24,l),
(2060,74,o),
(2172,291,o),
(2172,538,cs),
(2172,909,o),
(1928,1142,o),
(1555,1142,cs),
(1273,1142,o),
(1104,1012,o),
(1017,801,c),
(1241,801,l),
(1154,1012,o),
(985,1142,o),
(703,1142,cs),
(330,1142,o),
(86,909,o),
(86,538,cs),
(86,291,o),
(198,74,o),
(376,-24,c)
);
},
{
closed = 1;
nodes = (
(798,-708,l),
(730,-671,o),
(687,-596,o),
(687,-512,cs),
(687,-409,o),
(745,-344,o),
(837,-344,cs),
(925,-344,o),
(981,-411,o),
(981,-519,cs),
(981,-698,l),
(1266,-698,l),
(1266,-519,ls),
(1266,-411,o),
(1322,-344,o),
(1410,-344,cs),
(1496,-344,o),
(1550,-407,o),
(1550,-508,cs),
(1550,-617,o),
(1512,-706,o),
(1451,-740,c),
(1623,-885,l),
(1791,-801,o),
(1897,-646,o),
(1897,-481,cs),
(1897,-245,o),
(1724,-97,o),
(1448,-97,cs),
(1259,-97,o),
(1101,-186,o),
(1039,-328,c),
(1209,-328,l),
(1148,-186,o),
(990,-97,o),
(800,-97,cs),
(519,-97,o),
(342,-256,o),
(342,-509,cs),
(342,-679,o),
(423,-825,o),
(552,-888,c)
);
},
{
closed = 1;
nodes = (
(2172,-888,l),
(2172,-650,l),
(1705,-650,l),
(1451,-740,l),
(1451,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
54 1 2 1 8 1 0 2 98 1 6 8 75 71 70 3 10 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
123 122 115 114 103 101 47 45 37 36 46 39 24 41 37 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2258;
},
{
anchors = (
{
name = bottom;
pos = (1129,-820);
},
{
name = bottomright;
pos = (1602,-820);
},
{
name = hamedial;
pos = (1607,-820);
},
{
name = top;
pos = (1582,1118);
},
{
name = wamedial;
pos = (1597,-820);
}
);
hints = (
{
horizontal = 1;
origin = (2,4);
target = (2,2);
type = Stem;
},
{
horizontal = 1;
origin = (1,15);
target = (1,35);
type = Stem;
},
{
horizontal = 1;
origin = (0,41);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = (0,35);
target = (0,15);
type = Stem;
},
{
origin = (0,38);
target = (0,3);
type = Stem;
},
{
origin = (1,38);
target = (1,3);
type = Stem;
},
{
origin = (0,10);
target = (0,12);
type = Stem;
},
{
origin = (1,18);
target = (1,25);
type = Stem;
},
{
origin = (0,18);
target = (0,25);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(518,81,l),
(386,167,o),
(300,336,o),
(300,537,cs),
(300,809,o),
(454,982,o),
(688,982,cs),
(909,982,o),
(1051,833,o),
(1051,593,cs),
(1051,221,l),
(1221,221,l),
(1221,593,ls),
(1221,835,o),
(1361,982,o),
(1585,982,cs),
(1816,982,o),
(1972,807,o),
(1972,537,cs),
(1972,335,o),
(1886,168,o),
(1754,81,c),
(1866,-24,l),
(2038,74,o),
(2146,287,o),
(2146,538,cs),
(2146,904,o),
(1922,1142,o),
(1585,1142,cs),
(1324,1142,o),
(1145,999,o),
(1088,767,c),
(1184,767,l),
(1127,1000,o),
(949,1142,o),
(688,1142,cs),
(351,1142,o),
(126,903,o),
(126,538,cs),
(126,286,o),
(234,74,o),
(406,-24,c)
);
},
{
closed = 1;
nodes = (
(696,-799,l),
(599,-745,o),
(538,-641,o),
(538,-512,cs),
(538,-332,o),
(640,-227,o),
(807,-227,cs),
(953,-227,o),
(1058,-319,o),
(1058,-450,cs),
(1058,-698,l),
(1200,-698,l),
(1200,-450,ls),
(1200,-318,o),
(1303,-227,o),
(1451,-227,cs),
(1613,-227,o),
(1716,-334,o),
(1716,-510,cs),
(1716,-652,o),
(1657,-748,o),
(1562,-802,c),
(1653,-887,l),
(1793,-816,o),
(1882,-669,o),
(1882,-498,cs),
(1882,-250,o),
(1723,-97,o),
(1466,-97,cs),
(1277,-97,o),
(1125,-199,o),
(1084,-341,c),
(1174,-341,l),
(1132,-200,o),
(983,-97,o),
(792,-97,cs),
(535,-97,o),
(372,-256,o),
(372,-509,cs),
(372,-684,o),
(451,-824,o),
(576,-888,c)
);
},
{
closed = 1;
nodes = (
(2142,-888,l),
(2142,-766,l),
(1767,-766,l),
(1562,-802,l),
(1562,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 20 values pushed */
54 1 2 1 8 1 0 2 98 1 6 8 75 71 70 3 10 6 4 76 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
9 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
10 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
11 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
19 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
21 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 2 1 0 1 2 0 128 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 0 0 38 77 0 10 10 11 97 0 11 11 40 11 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 48 values pushed */
0 2 1 0 1 2 0 128 0 0 8 1 0 8 126 9 1 8 7 1 6 10 8 6 105 3 1 1 1 4 97 5 1 4 4 37 77 0 10 10 11 97 0 11 11 40 11 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
123 122 115 114 103 101 47 45 37 36 46 39 24 41 37 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2272;
}
);
note = uni1023;
unicode = 4131;
}
