{
glyphname = "ra-aiton";
kernLeft = "raMedial-myanmar";
layers = (
{
anchors = (
{
name = bottom;
pos = (2131,0);
},
{
name = bottomright;
pos = (2013,0);
},
{
name = hamedial;
pos = (2086,0);
},
{
name = top;
pos = (2054,1118);
},
{
name = wamedial;
pos = (2025,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(1178,-888,ls),
(1411,-888,o),
(1542,-757,o),
(1542,-524,cs),
(1542,554,ls),
(1542,911,o),
(1377,1142,o),
(1029,1142,cs),
(706,1142,o),
(492,919,o),
(492,564,cs),
(492,203,o),
(680,-24,o),
(996,-24,cs),
(1075,-24,o),
(1165,-7,o),
(1230,23,c),
(1217,68,l),
(1154,38,o),
(1069,21,o),
(996,21,cs),
(707,21,o),
(538,230,o),
(538,564,cs),
(538,891,o),
(734,1097,o),
(1028,1097,cs),
(1347,1097,o),
(1496,882,o),
(1496,554,cs),
(1496,-513,ls),
(1496,-725,o),
(1378,-843,o),
(1167,-843,cs),
(545,-843,ls),
(334,-843,o),
(216,-725,o),
(216,-513,cs),
(216,1175,ls),
(216,1387,o),
(334,1505,o),
(545,1505,cs),
(1277,1505,ls),
(1433,1505,o),
(1542,1614,o),
(1542,1769,cs),
(1542,1984,l),
(1496,1984,l),
(1496,1777,ls),
(1496,1638,o),
(1408,1550,o),
(1269,1550,cs),
(534,1550,ls),
(301,1550,o),
(170,1419,o),
(170,1186,cs),
(170,-524,ls),
(170,-757,o),
(301,-888,o),
(534,-888,cs)
);
},
{
closed = 1;
nodes = (
(2274,-24,o),
(2468,200,o),
(2468,559,cs),
(2468,917,o),
(2260,1142,o),
(1929,1142,cs),
(1872,1142,o),
(1812,1133,o),
(1754,1113,c),
(1769,1070,l),
(1820,1088,o),
(1874,1097,o),
(1929,1097,cs),
(2231,1097,o),
(2422,889,o),
(2422,559,cs),
(2422,229,o),
(2247,21,o),
(1953,21,cs),
(1756,21,o),
(1606,137,o),
(1531,312,c),
(1508,257,l),
(1597,80,o),
(1756,-24,o),
(1952,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 3 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 10 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 14 1 1 0 7 14 0 105 10 9 2 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 3 4 3 10 4 128 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 7 1 0 7 128 0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 0 1 0 14 1 103 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
104 102 96 93 85 83 78 76 73 72 70 69 42 36 23 17 21 43 55 33 19 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2618;
},
{
anchors = (
{
name = bottom;
pos = (2319,0);
},
{
name = bottomright;
pos = (2309,0);
},
{
name = hamedial;
pos = (2379,0);
},
{
name = top;
pos = (2265,1118);
},
{
name = wamedial;
pos = (2335,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(1349,-888,ls),
(1670,-888,o),
(1849,-709,o),
(1849,-388,cs),
(1849,554,ls),
(1849,915,o),
(1611,1142,o),
(1231,1142,cs),
(848,1142,o),
(608,913,o),
(608,548,cs),
(608,197,o),
(816,-24,o),
(1146,-24,cs),
(1242,-24,o),
(1333,-8,o),
(1395,18,c),
(1325,284,l),
(1288,271,o),
(1251,265,o),
(1216,265,cs),
(1084,265,o),
(974,355,o),
(974,542,cs),
(974,716,o),
(1077,825,o),
(1242,825,cs),
(1412,825,o),
(1519,715,o),
(1519,539,cs),
(1519,-373,ls),
(1519,-524,o),
(1440,-608,o),
(1299,-608,cs),
(710,-608,ls),
(569,-608,o),
(490,-524,o),
(490,-373,cs),
(490,1240,ls),
(490,1391,o),
(569,1475,o),
(710,1475,cs),
(1349,1475,ls),
(1670,1475,o),
(1849,1644,o),
(1849,1965,cs),
(1849,2070,l),
(1529,2070,l),
(1529,1990,ls),
(1529,1839,o),
(1450,1755,o),
(1309,1755,cs),
(650,1755,ls),
(329,1755,o),
(150,1576,o),
(150,1255,cs),
(150,-388,ls),
(150,-709,o),
(329,-888,o),
(650,-888,cs)
);
},
{
closed = 1;
nodes = (
(2526,-24,o),
(2744,213,o),
(2744,570,cs),
(2744,921,o),
(2536,1142,o),
(2206,1142,cs),
(2110,1142,o),
(2019,1126,o),
(1957,1100,c),
(2027,834,l),
(2064,847,o),
(2101,853,o),
(2136,853,cs),
(2268,853,o),
(2378,763,o),
(2378,576,cs),
(2378,403,o),
(2282,296,o),
(2128,296,cs),
(1957,296,o),
(1849,420,o),
(1849,554,c),
(1620,357,l),
(1693,145,o),
(1907,-24,o),
(2177,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 3 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 10 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 14 1 1 0 7 14 0 105 10 9 2 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 3 4 3 10 4 128 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 7 1 0 7 128 0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 0 1 0 14 1 103 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
104 102 96 93 85 83 78 76 73 72 70 69 42 36 23 17 21 43 55 33 19 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2830;
},
{
anchors = (
{
name = bottom;
pos = (2241,0);
},
{
name = bottomright;
pos = (2123,0);
},
{
name = hamedial;
pos = (2180,0);
},
{
name = top;
pos = (2113,1118);
},
{
name = wamedial;
pos = (2136,0);
}
);
hints = (
{
horizontal = 1;
origin = (0,59);
target = (0,34);
type = Stem;
},
{
horizontal = 1;
origin = (1,25);
target = (1,18);
type = Stem;
},
{
horizontal = 1;
origin = (1,5);
target = (0,26);
type = Stem;
},
{
horizontal = 1;
origin = (0,42);
target = (0,52);
type = Stem;
},
{
horizontal = 1;
origin = (1,5);
target = (1,12);
type = Stem;
},
{
horizontal = 1;
origin = (1,25);
target = (0,20);
type = Stem;
},
{
origin = (0,56);
target = (0,38);
type = Stem;
},
{
origin = (0,10);
target = (0,23);
type = Stem;
},
{
origin = (0,46);
target = (0,30);
type = Stem;
},
{
origin = (1,15);
target = (1,2);
type = Stem;
},
{
origin = (0,46);
target = (0,48);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(1234,-888,ls),
(1503,-888,o),
(1653,-738,o),
(1653,-470,cs),
(1653,554,ls),
(1653,913,o),
(1459,1142,o),
(1098,1142,cs),
(751,1142,o),
(526,917,o),
(526,558,cs),
(526,201,o),
(722,-24,o),
(1044,-24,cs),
(1130,-24,o),
(1220,-7,o),
(1284,21,c),
(1248,154,l),
(1196,131,o),
(1130,119,o),
(1072,119,cs),
(846,119,o),
(700,280,o),
(700,555,cs),
(700,821,o),
(859,982,o),
(1102,982,cs),
(1361,982,o),
(1481,815,o),
(1481,548,cs),
(1481,-453,ls),
(1481,-641,o),
(1391,-734,o),
(1208,-734,cs),
(599,-734,ls),
(416,-734,o),
(322,-641,o),
(322,-453,cs),
(322,1209,ls),
(322,1396,o),
(416,1490,o),
(599,1490,cs),
(1294,1490,ls),
(1516,1490,o),
(1653,1638,o),
(1653,1859,cs),
(1653,2030,l),
(1493,2030,l),
(1493,1874,ls),
(1493,1730,o),
(1413,1644,o),
(1273,1644,cs),
(568,1644,ls),
(300,1644,o),
(150,1493,o),
(150,1225,cs),
(150,-470,ls),
(150,-738,o),
(300,-888,o),
(568,-888,cs)
);
},
{
closed = 1;
nodes = (
(2363,-24,o),
(2566,205,o),
(2566,563,cs),
(2566,919,o),
(2358,1142,o),
(2028,1142,cs),
(1955,1142,o),
(1883,1130,o),
(1823,1108,c),
(1860,973,l),
(1906,989,o),
(1953,996,o),
(2000,996,cs),
(2234,996,o),
(2392,839,o),
(2392,566,cs),
(2392,299,o),
(2249,136,o),
(2011,136,cs),
(1824,136,o),
(1691,250,o),
(1646,409,c),
(1541,297,l),
(1623,106,o),
(1804,-24,o),
(2030,-24,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 3 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
0 1 0 14 86 57 23 3 4 10 39 1 6 4 3 76 110 1 14 74 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 23 values pushed */
0 1 0 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 23 values pushed */
0 1 1 14 57 23 2 5 10 86 1 4 5 39 1 6 4 4 76 110 1 14 74 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
25 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 46 values pushed */
0 14 1 1 0 7 14 0 105 10 9 2 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
35 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 53 values pushed */
0 10 3 4 3 10 4 128 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 5 2 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 59 values pushed */
0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 1 1 0 7 14 0 105 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 66 values pushed */
0 0 1 7 1 0 7 128 0 10 3 5 3 10 5 128 0 5 4 3 5 4 126 0 14 0 1 0 14 1 103 9 1 3 3 7 97 11 1 7 7 37 77 8 1 4 4 6 97 12 1 6 6 38 77 0 2 2 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 24 values pushed */
104 102 96 93 85 83 78 76 73 72 70 69 42 36 23 17 21 43 55 33 19 15 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2692;
}
);
note = uniAA7A;
unicode = 43642;
}
