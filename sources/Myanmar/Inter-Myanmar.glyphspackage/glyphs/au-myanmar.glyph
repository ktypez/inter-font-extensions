{
glyphname = "au-myanmar";
layers = (
{
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(3219,-888,ls),
(3452,-888,o),
(3583,-757,o),
(3583,-524,cs),
(3583,167,l),
(3539,167,l),
(3539,-513,ls),
(3539,-734,o),
(3429,-843,o),
(3208,-843,cs),
(1821,-843,ls),
(1601,-843,o),
(1492,-734,o),
(1492,-513,cs),
(1492,1609,ls),
(1492,1830,o),
(1601,1939,o),
(1821,1939,cs),
(3208,1939,ls),
(3429,1939,o),
(3539,1830,o),
(3539,1609,cs),
(3539,1356,l),
(3583,1356,l),
(3583,1620,ls),
(3583,1853,o),
(3452,1984,o),
(3219,1984,cs),
(1810,1984,ls),
(1577,1984,o),
(1446,1853,o),
(1446,1620,cs),
(1446,-524,ls),
(1446,-757,o),
(1577,-888,o),
(1810,-888,cs)
);
},
{
closed = 1;
nodes = (
(913,-24,o),
(1118,130,o),
(1170,352,c),
(1124,413,o),
(967,488,o),
(780,488,cs),
(584,488,o),
(380,382,o),
(270,214,c),
(296,172,l),
(400,347,o),
(607,446,o),
(792,446,cs),
(929,446,o),
(1060,403,o),
(1142,326,c),
(1126,363,l),
(1102,206,o),
(930,21,o),
(682,21,cs),
(400,21,o),
(196,245,o),
(196,560,cs),
(196,876,o),
(401,1097,o),
(689,1097,cs),
(880,1097,o),
(1042,1003,o),
(1106,852,c),
(1144,868,l),
(1082,1025,o),
(908,1142,o),
(689,1142,cs),
(376,1142,o),
(150,901,o),
(150,560,cs),
(150,222,o),
(377,-24,o),
(682,-24,cs)
);
},
{
closed = 1;
nodes = (
(2523,-24,o),
(2756,222,o),
(2756,559,cs),
(2756,896,o),
(2523,1142,o),
(2207,1142,cs),
(2000,1142,o),
(1830,1037,o),
(1736,869,c),
(1778,852,l),
(1864,1003,o),
(2018,1097,o),
(2207,1097,cs),
(2501,1097,o),
(2710,873,o),
(2710,559,cs),
(2710,245,o),
(2501,21,o),
(2207,21,cs),
(2018,21,o),
(1864,115,o),
(1778,266,c),
(1736,249,l),
(1830,81,o),
(2000,-24,o),
(2207,-24,cs)
);
},
{
closed = 1;
nodes = (
(3495,-24,o),
(3712,200,o),
(3712,559,cs),
(3712,917,o),
(3535,1142,o),
(3203,1142,cs),
(3143,1142,o),
(3084,1132,o),
(3029,1113,c),
(3044,1070,l),
(3095,1088,o),
(3148,1097,o),
(3204,1097,cs),
(3506,1097,o),
(3666,888,o),
(3666,559,cs),
(3666,229,o),
(3468,21,o),
(3174,21,cs),
(2964,21,o),
(2776,154,o),
(2710,363,c),
(2679,319,l),
(2755,109,o),
(2951,-24,o),
(3174,-24,cs)
);
},
{
closed = 1;
nodes = (
(4437,-24,o),
(4633,201,o),
(4633,559,cs),
(4633,918,o),
(4428,1142,o),
(4124,1142,cs),
(3915,1142,o),
(3729,1010,o),
(3657,799,c),
(3687,755,l),
(3749,964,o),
(3926,1097,o),
(4124,1097,cs),
(4401,1097,o),
(4587,889,o),
(4587,559,cs),
(4587,229,o),
(4408,21,o),
(4124,21,cs),
(4072,21,o),
(4021,30,o),
(3973,48,c),
(3959,5,l),
(4011,-14,o),
(4067,-24,o),
(4124,-24,cs)
);
},
{
closed = 1;
nodes = (
(4280,1280,l),
(4028,1309,o),
(3866,1460,o),
(3866,1666,cs),
(3866,1836,o),
(3987,1944,o),
(4181,1944,cs),
(4287,1944,o),
(4394,1907,o),
(4459,1849,c),
(4484,1881,l),
(4415,1944,o),
(4298,1984,o),
(4182,1984,cs),
(3963,1984,o),
(3826,1861,o),
(3826,1664,cs),
(3826,1435,o),
(4001,1271,o),
(4280,1240,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 6 28 7 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 12 28 7 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 103 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 6 5 28 6 126 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 12 4 6 6 0 97 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 108 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 118 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 14 95 0 14 14 39 77 10 1 8 8 9 97 0 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 56 values pushed */
219 217 211 209 206 204 197 195 189 187 181 179 174 173 172 171 167 165 159 157 153 152 149 147 143 141 139 138 131 129 125 123 117 114 108 105 98 96 91 88 81 78 75 73 34 21 36 35 23 36 38 36 36 31 8 31 
CALL[ ]	/* CallFunction */";
};
width = 4783;
},
{
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(3455,-888,ls),
(3776,-888,o),
(3955,-709,o),
(3955,-388,cs),
(3955,300,l),
(3665,300,l),
(3665,-383,ls),
(3665,-534,o),
(3586,-618,o),
(3445,-618,cs),
(2011,-618,ls),
(1870,-618,o),
(1791,-534,o),
(1791,-383,cs),
(1791,1565,ls),
(1791,1716,o),
(1870,1800,o),
(2011,1800,cs),
(3445,1800,ls),
(3586,1800,o),
(3665,1716,o),
(3665,1565,cs),
(3665,1465,l),
(3955,1465,l),
(3955,1570,ls),
(3955,1891,o),
(3776,2070,o),
(3455,2070,cs),
(1951,2070,ls),
(1630,2070,o),
(1451,1891,o),
(1451,1570,cs),
(1451,-388,ls),
(1451,-709,o),
(1630,-888,o),
(1951,-888,cs)
);
},
{
closed = 1;
nodes = (
(1043,-24,o),
(1260,165,o),
(1296,427,c),
(1211,496,o),
(1044,573,o),
(847,573,cs),
(632,573,o),
(433,495,o),
(330,371,c),
(451,262,l),
(545,361,o),
(677,400,o),
(798,400,cs),
(891,400,o),
(977,377,o),
(1034,341,c),
(1016,412,l),
(987,299,o),
(885,228,o),
(753,228,cs),
(578,228,o),
(452,362,o),
(452,559,cs),
(452,739,o),
(559,852,o),
(720,852,cs),
(847,852,o),
(946,788,o),
(978,685,c),
(1302,764,l),
(1250,996,o),
(1025,1142,o),
(720,1142,cs),
(333,1142,o),
(86,917,o),
(86,559,cs),
(86,201,o),
(331,-24,o),
(716,-24,cs)
);
},
{
closed = 1;
nodes = (
(2929,-24,o),
(3175,201,o),
(3175,559,cs),
(3175,917,o),
(2929,1142,o),
(2538,1142,cs),
(2213,1142,o),
(1990,982,o),
(1959,728,c),
(2275,646,l),
(2295,754,o),
(2396,822,o),
(2538,822,cs),
(2704,822,o),
(2809,721,o),
(2809,559,cs),
(2809,397,o),
(2704,296,o),
(2538,296,cs),
(2396,296,o),
(2295,364,o),
(2275,472,c),
(1959,390,l),
(1990,136,o),
(2213,-24,o),
(2538,-24,cs)
);
},
{
closed = 1;
nodes = (
(3827,-24,o),
(4045,213,o),
(4045,570,cs),
(4045,921,o),
(3837,1142,o),
(3507,1142,cs),
(3411,1142,o),
(3320,1126,o),
(3258,1100,c),
(3328,834,l),
(3365,847,o),
(3402,853,o),
(3437,853,cs),
(3569,853,o),
(3679,763,o),
(3679,576,cs),
(3679,403,o),
(3583,296,o),
(3429,296,cs),
(3297,296,o),
(3184,373,o),
(3141,495,c),
(2921,317,l),
(2994,105,o),
(3208,-24,o),
(3478,-24,cs)
);
},
{
closed = 1;
nodes = (
(4738,-24,o),
(4946,197,o),
(4946,548,cs),
(4946,905,o),
(4728,1142,o),
(4379,1142,cs),
(4109,1142,o),
(3895,1013,o),
(3822,801,c),
(4036,623,l),
(4079,745,o),
(4198,822,o),
(4330,822,cs),
(4484,822,o),
(4580,715,o),
(4580,542,cs),
(4580,355,o),
(4470,265,o),
(4338,265,cs),
(4303,265,o),
(4266,271,o),
(4229,284,c),
(4159,18,l),
(4221,-8,o),
(4312,-24,o),
(4408,-24,cs)
);
},
{
closed = 1;
nodes = (
(4615,1443,l),
(4411,1443,o),
(4283,1536,o),
(4283,1674,cs),
(4283,1775,o),
(4364,1839,o),
(4494,1839,cs),
(4589,1839,o),
(4687,1799,o),
(4749,1735,c),
(4868,1899,l),
(4777,2009,o),
(4633,2074,o),
(4462,2074,cs),
(4191,2074,o),
(4011,1916,o),
(4011,1698,cs),
(4011,1416,o),
(4255,1240,o),
(4615,1240,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 6 28 7 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 12 28 7 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 103 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 6 5 28 6 126 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 12 4 6 6 0 97 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 108 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 118 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 14 95 0 14 14 39 77 10 1 8 8 9 97 0 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 56 values pushed */
219 217 211 209 206 204 197 195 189 187 181 179 174 173 172 171 167 165 159 157 153 152 149 147 143 141 139 138 131 129 125 123 117 114 108 105 98 96 91 88 81 78 75 73 34 21 36 35 23 36 38 36 36 31 8 31 
CALL[ ]	/* CallFunction */";
};
width = 5032;
},
{
hints = (
{
horizontal = 1;
origin = (0,35);
target = (0,10);
type = Stem;
},
{
horizontal = 1;
origin = (1,12);
target = (1,5);
type = Stem;
},
{
horizontal = 1;
origin = (0,18);
target = (0,28);
type = Stem;
},
{
horizontal = 1;
origin = (4,5);
target = (1,25);
type = Stem;
},
{
horizontal = 1;
origin = (5,6);
target = (5,13);
type = Stem;
},
{
horizontal = 1;
origin = (4,25);
target = (1,19);
type = Stem;
},
{
origin = (1,35);
target = (1,22);
type = Stem;
},
{
origin = (0,32);
target = (0,14);
type = Stem;
},
{
origin = (2,15);
target = (2,2);
type = Stem;
},
{
origin = (5,16);
target = (5,3);
type = Stem;
},
{
origin = (4,15);
target = (4,2);
type = Stem;
},
{
origin = (3,15);
target = (3,2);
type = Stem;
},
{
origin = (0,22);
target = (0,24);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(3315,-888,ls),
(3583,-888,o),
(3733,-738,o),
(3733,-470,cs),
(3733,220,l),
(3569,220,l),
(3569,-457,ls),
(3569,-645,o),
(3471,-734,o),
(3288,-734,cs),
(1899,-734,ls),
(1716,-734,o),
(1622,-645,o),
(1622,-457,cs),
(1622,1599,ls),
(1622,1787,o),
(1716,1876,o),
(1899,1876,cs),
(3292,1876,ls),
(3475,1876,o),
(3573,1787,o),
(3573,1599,cs),
(3573,1411,l),
(3733,1411,l),
(3733,1612,ls),
(3733,1880,o),
(3583,2030,o),
(3315,2030,cs),
(1868,2030,ls),
(1600,2030,o),
(1450,1880,o),
(1450,1612,cs),
(1450,-470,ls),
(1450,-738,o),
(1600,-888,o),
(1868,-888,cs)
);
},
{
closed = 1;
nodes = (
(966,-24,o),
(1178,152,o),
(1224,408,c),
(1144,489,o),
(980,548,o),
(803,548,cs),
(591,548,o),
(386,454,o),
(280,304,c),
(371,198,l),
(460,328,o),
(625,410,o),
(800,410,cs),
(912,410,o),
(1026,373,o),
(1097,313,c),
(1065,390,l),
(1025,232,o),
(880,120,o),
(711,120,cs),
(475,120,o),
(299,292,o),
(299,560,cs),
(299,822,o),
(468,992,o),
(701,992,cs),
(865,992,o),
(1006,918,o),
(1056,786,c),
(1208,828,l),
(1151,1015,o),
(952,1142,o),
(701,1142,cs),
(363,1142,o),
(125,908,o),
(125,560,cs),
(125,214,o),
(363,-24,o),
(696,-24,cs)
);
},
{
closed = 1;
nodes = (
(2687,-24,o),
(2925,214,o),
(2925,559,cs),
(2925,904,o),
(2687,1142,o),
(2341,1142,cs),
(2087,1142,o),
(1896,1015,o),
(1827,813,c),
(1978,770,l),
(2038,903,o),
(2171,982,o),
(2341,982,cs),
(2584,982,o),
(2751,812,o),
(2751,559,cs),
(2751,306,o),
(2584,136,o),
(2341,136,cs),
(2171,136,o),
(2038,215,o),
(1978,348,c),
(1827,305,l),
(1896,103,o),
(2087,-24,o),
(2341,-24,cs)
);
},
{
closed = 1;
nodes = (
(3629,-24,o),
(3847,205,o),
(3847,563,cs),
(3847,919,o),
(3657,1142,o),
(3326,1142,cs),
(3252,1142,o),
(3180,1130,o),
(3122,1108,c),
(3159,973,l),
(3205,989,o),
(3251,996,o),
(3299,996,cs),
(3533,996,o),
(3673,838,o),
(3673,566,cs),
(3673,299,o),
(3516,136,o),
(3278,136,cs),
(3099,136,o),
(2941,242,o),
(2884,416,c),
(2777,318,l),
(2852,107,o),
(3055,-24,o),
(3297,-24,cs)
);
},
{
closed = 1;
nodes = (
(4559,-24,o),
(4760,199,o),
(4760,555,cs),
(4760,913,o),
(4550,1142,o),
(4228,1142,cs),
(3994,1142,o),
(3797,1011,o),
(3725,800,c),
(3828,702,l),
(3883,876,o),
(4036,982,o),
(4208,982,cs),
(4436,982,o),
(4586,819,o),
(4586,552,cs),
(4586,279,o),
(4434,122,o),
(4211,122,cs),
(4166,122,o),
(4121,129,o),
(4077,145,c),
(4041,10,l),
(4097,-12,o),
(4167,-24,o),
(4239,-24,cs)
);
},
{
closed = 1;
nodes = (
(4439,1365,l),
(4209,1393,o),
(4054,1501,o),
(4054,1670,cs),
(4054,1805,o),
(4164,1889,o),
(4337,1889,cs),
(4436,1889,o),
(4528,1857,o),
(4584,1810,c),
(4665,1916,l),
(4581,1986,o),
(4448,2029,o),
(4319,2029,cs),
(4057,2029,o),
(3892,1893,o),
(3892,1675,cs),
(3892,1438,o),
(4103,1274,o),
(4439,1240,c)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 6 28 7 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 37 values pushed */
120 1 8 9 71 56 48 3 7 8 175 1 3 1 154 17 2 20 3 223 161 2 4 2 134 128 36 30 4 28 17 42 1 12 28 7 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 103 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 6 5 28 6 126 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 12 4 6 6 0 97 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
49 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 108 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 9 97 14 1 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 118 values pushed */
0 7 8 1 8 7 1 128 0 20 3 2 3 20 2 128 0 2 4 3 2 4 126 0 17 5 28 5 17 28 128 0 28 12 5 28 12 126 0 12 6 6 12 112 0 4 0 5 17 4 5 105 10 1 8 8 14 95 0 14 14 39 77 10 1 8 8 9 97 0 9 9 39 77 30 24 23 19 4 3 3 1 97 26 25 21 3 1 1 37 77 29 22 18 3 6 6 0 98 27 16 15 3 0 0 38 77 0 11 11 13 96 0 13 13 40 13 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 56 values pushed */
219 217 211 209 206 204 197 195 189 187 181 179 174 173 172 171 167 165 159 157 153 152 149 147 143 141 139 138 131 129 125 123 117 114 108 105 98 96 91 88 81 78 75 73 34 21 36 35 23 36 38 36 36 31 8 31 
CALL[ ]	/* CallFunction */";
};
width = 4886;
}
);
note = uni102A;
unicode = 4138;
}
