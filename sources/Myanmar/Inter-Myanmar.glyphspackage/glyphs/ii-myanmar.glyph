{
glyphname = "ii-myanmar";
layers = (
{
anchors = (
{
name = top;
pos = (1156,1118);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(1745,-888,ls),
(1911,-888,o),
(2015,-784,o),
(2015,-618,cs),
(2015,560,ls),
(2015,919,o),
(1830,1142,o),
(1526,1142,cs),
(1321,1142,o),
(1155,1016,o),
(1081,811,c),
(1104,811,l),
(1033,1021,o),
(871,1142,o),
(648,1142,cs),
(342,1142,o),
(150,911,o),
(150,541,cs),
(150,321,o),
(250,103,o),
(409,-24,c),
(442,7,l),
(290,126,o),
(196,331,o),
(196,541,cs),
(196,883,o),
(370,1097,o),
(648,1097,cs),
(926,1097,o),
(1100,883,o),
(1100,541,cs),
(1100,331,o),
(1006,126,o),
(854,7,c),
(887,-24,l),
(1046,103,o),
(1146,321,o),
(1146,541,cs),
(1146,639,o),
(1132,728,o),
(1107,805,c),
(1105,747,l),
(1165,961,o),
(1325,1097,o),
(1526,1097,cs),
(1803,1097,o),
(1969,890,o),
(1969,560,cs),
(1969,-618,ls),
(1969,-756,o),
(1883,-843,o),
(1745,-843,cs),
(476,-843,ls),
(304,-843,o),
(196,-760,o),
(196,-646,cs),
(196,-500,o),
(383,-411,o),
(688,-411,cs),
(912,-411,o),
(1235,-460,o),
(1380,-516,c),
(1392,-471,l),
(1190,-409,o),
(910,-367,o),
(699,-367,cs),
(354,-367,o),
(150,-471,o),
(150,-648,cs),
(150,-787,o),
(276,-888,o),
(476,-888,cs)
);
},
{
closed = 1;
nodes = (
(2389,-888,l),
(2389,793,ls),
(2389,986,o),
(2243,1115,o),
(2098,1243,cs),
(1958,1366,o),
(1820,1489,o),
(1820,1666,cs),
(1820,1836,o),
(1941,1944,o),
(2135,1944,cs),
(2241,1944,o),
(2348,1907,o),
(2413,1849,c),
(2438,1881,l),
(2369,1944,o),
(2252,1984,o),
(2136,1984,cs),
(1917,1984,o),
(1780,1861,o),
(1780,1664,cs),
(1780,1472,o),
(1925,1342,o),
(2068,1216,cs),
(2207,1093,o),
(2343,971,o),
(2343,795,cs),
(2343,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
17 1 2 3 28 27 2 12 2 105 1 10 9 59 44 34 3 8 6 4 76 95 1 10 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 2 3 12 3 2 114 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 1 0 3 2 1 3 105 0 5 0 7 6 5 7 105 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
112 110 103 101 86 84 76 75 70 68 35 35 20 37 47 34 35 42 33 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2559;
},
{
anchors = (
{
name = top;
pos = (1142,1118);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(1774,-888,ls),
(2019,-888,o),
(2172,-757,o),
(2172,-548,cs),
(2172,548,ls),
(2172,905,o),
(1954,1142,o),
(1605,1142,cs),
(1335,1142,o),
(1121,1013,o),
(1048,801,c),
(1252,801,l),
(1165,1012,o),
(966,1142,o),
(694,1142,cs),
(321,1142,o),
(86,909,o),
(86,538,cs),
(86,291,o),
(198,74,o),
(376,-24,c),
(608,191,l),
(512,252,o),
(452,385,o),
(452,537,cs),
(452,712,o),
(545,822,o),
(694,822,cs),
(843,822,o),
(936,712,o),
(936,537,cs),
(936,385,o),
(876,252,o),
(780,191,c),
(1012,-24,l),
(1190,74,o),
(1302,291,o),
(1302,538,cs),
(1302,592,o),
(1297,644,o),
(1287,692,c),
(1276,611,l),
(1324,749,o),
(1438,822,o),
(1556,822,cs),
(1736,822,o),
(1832,677,o),
(1832,542,cs),
(1832,-498,ls),
(1832,-581,o),
(1785,-628,o),
(1702,-628,cs),
(516,-628,ls),
(448,-628,o),
(406,-593,o),
(406,-537,cs),
(406,-431,o),
(565,-402,o),
(760,-402,cs),
(1010,-402,o),
(1319,-449,o),
(1434,-473,c),
(1493,-236,l),
(1309,-193,o),
(1033,-149,o),
(753,-149,cs),
(402,-149,o),
(86,-241,o),
(86,-546,cs),
(86,-770,o),
(248,-888,o),
(507,-888,cs)
);
},
{
closed = 1;
nodes = (
(2720,-888,l),
(2720,903,ls),
(2720,1231,o),
(2547,1373,o),
(2413,1483,cs),
(2330,1551,o),
(2262,1607,o),
(2262,1687,cs),
(2262,1779,o),
(2346,1828,o),
(2445,1828,cs),
(2525,1828,o),
(2614,1800,o),
(2678,1735,c),
(2814,1911,l),
(2728,2011,o),
(2556,2074,o),
(2367,2074,cs),
(2094,2074,o),
(1923,1925,o),
(1923,1701,cs),
(1923,1497,o),
(2043,1382,o),
(2161,1272,cs),
(2273,1167,o),
(2380,1064,o),
(2380,890,cs),
(2380,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
17 1 2 3 28 27 2 12 2 105 1 10 9 59 44 34 3 8 6 4 76 95 1 10 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 2 3 12 3 2 114 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 1 0 3 2 1 3 105 0 5 0 7 6 5 7 105 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
112 110 103 101 86 84 76 75 70 68 35 35 20 37 47 34 35 42 33 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2846;
},
{
anchors = (
{
name = top;
pos = (1152,1118);
}
);
hints = (
{
horizontal = 1;
origin = (1,27);
target = (0,52);
type = Stem;
},
{
horizontal = 1;
origin = (0,58);
target = (0,65);
type = Stem;
},
{
horizontal = 1;
origin = (0,34);
target = up;
type = BottomGhost;
},
{
horizontal = 1;
origin = (0,14);
target = (0,44);
type = Stem;
},
{
horizontal = 1;
origin = (1,10);
target = (1,17);
type = Stem;
},
{
origin = (0,68);
target = (0,55);
type = Stem;
},
{
origin = (0,30);
target = (0,37);
type = Stem;
},
{
origin = (0,48);
target = (0,4);
type = Stem;
},
{
origin = (1,27);
target = (1,1);
type = Stem;
},
{
origin = (0,68);
target = (0,24);
type = Stem;
},
{
origin = (1,20);
target = (1,7);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(1758,-888,ls),
(1956,-888,o),
(2079,-773,o),
(2079,-590,cs),
(2079,555,ls),
(2079,916,o),
(1879,1142,o),
(1559,1142,cs),
(1328,1142,o),
(1143,1015,o),
(1069,807,c),
(1165,807,l),
(1085,1021,o),
(906,1142,o),
(668,1142,cs),
(335,1142,o),
(126,910,o),
(126,540,cs),
(126,309,o),
(224,107,o),
(400,-24,c),
(521,87,l),
(375,204,o),
(300,358,o),
(300,539,cs),
(300,814,o),
(441,982,o),
(668,982,cs),
(895,982,o),
(1036,814,o),
(1036,539,cs),
(1036,358,o),
(961,204,o),
(815,87,c),
(936,-24,l),
(1112,107,o),
(1210,309,o),
(1210,540,cs),
(1210,619,o),
(1200,693,o),
(1181,760,c),
(1175,693,l),
(1229,873,o),
(1370,982,o),
(1540,982,cs),
(1768,982,o),
(1907,816,o),
(1907,553,cs),
(1907,-570,ls),
(1907,-684,o),
(1844,-734,o),
(1725,-734,cs),
(494,-734,ls),
(366,-734,o),
(296,-695,o),
(296,-602,cs),
(296,-480,o),
(438,-423,o),
(718,-423,cs),
(929,-423,o),
(1253,-464,o),
(1403,-512,c),
(1434,-368,l),
(1221,-309,o),
(942,-271,o),
(722,-271,cs),
(346,-271,o),
(126,-395,o),
(126,-607,cs),
(126,-780,o),
(266,-888,o),
(490,-888,cs)
);
},
{
closed = 1;
nodes = (
(2523,-888,l),
(2523,846,ls),
(2523,1089,o),
(2365,1230,o),
(2222,1357,cs),
(2106,1460,o),
(2000,1556,o),
(2000,1689,cs),
(2000,1812,o),
(2102,1889,o),
(2265,1889,cs),
(2353,1889,o),
(2440,1861,o),
(2492,1816,c),
(2573,1922,l),
(2495,1988,o),
(2369,2029,o),
(2246,2029,cs),
(1995,2029,o),
(1838,1900,o),
(1838,1694,cs),
(1838,1493,o),
(1972,1368,o),
(2104,1246,cs),
(2229,1130,o),
(2351,1016,o),
(2351,842,cs),
(2351,-888,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 26 values pushed */
17 1 2 3 28 27 2 12 2 105 1 10 9 59 44 34 3 8 6 4 76 95 1 10 1 75 
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
17 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 62 values pushed */
0 2 3 12 3 2 114 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
33 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 63 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 5 0 7 6 5 7 105 0 3 3 1 97 0 1 1 39 77 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 61 values pushed */
0 2 3 12 3 2 12 128 0 6 7 8 7 6 8 128 0 1 0 3 2 1 3 105 0 5 0 7 6 5 7 105 11 1 9 9 12 97 13 1 12 12 37 77 0 10 10 38 77 0 8 8 0 97 4 1 0 0 40 0 78 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 22 values pushed */
112 110 103 101 86 84 76 75 70 68 35 35 20 37 47 34 35 42 33 14 8 31 
CALL[ ]	/* CallFunction */";
};
width = 2677;
}
);
note = uni1024;
unicode = 4132;
}
