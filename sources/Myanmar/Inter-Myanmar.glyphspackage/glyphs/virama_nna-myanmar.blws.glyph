{
glyphname = "virama_nna-myanmar.blws";
layers = (
{
anchors = (
{
name = _bottom;
pos = (-660,0);
}
);
layerId = "78B30572-30A3-488A-B9E2-AAE684162724";
shapes = (
{
closed = 1;
nodes = (
(-1031,-888,o),
(-1007,-882,o),
(-989,-873,c),
(-995,-835,l),
(-1015,-843,o),
(-1035,-848,o),
(-1049,-848,cs),
(-1156,-848,o),
(-1220,-731,o),
(-1220,-545,cs),
(-1220,-349,o),
(-1136,-226,o),
(-993,-226,cs),
(-857,-226,o),
(-774,-336,o),
(-774,-510,cs),
(-774,-582,o),
(-807,-675,o),
(-807,-733,cs),
(-807,-828,o),
(-751,-888,o),
(-660,-888,cs),
(-569,-888,o),
(-513,-828,o),
(-513,-733,cs),
(-513,-675,o),
(-546,-582,o),
(-546,-510,cs),
(-546,-336,o),
(-463,-226,o),
(-327,-226,cs),
(-184,-226,o),
(-100,-349,o),
(-100,-545,cs),
(-100,-731,o),
(-164,-848,o),
(-271,-848,cs),
(-285,-848,o),
(-305,-843,o),
(-325,-835,c),
(-331,-873,l),
(-313,-882,o),
(-289,-888,o),
(-269,-888,cs),
(-140,-888,o),
(-60,-756,o),
(-60,-545,cs),
(-60,-324,o),
(-161,-186,o),
(-326,-186,cs),
(-414,-186,o),
(-484,-224,o),
(-530,-294,c),
(-499,-297,l),
(-519,-226,o),
(-582,-186,o),
(-660,-186,cs),
(-738,-186,o),
(-801,-226,o),
(-821,-297,c),
(-790,-294,l),
(-836,-224,o),
(-906,-186,o),
(-994,-186,cs),
(-1159,-186,o),
(-1260,-324,o),
(-1260,-545,cs),
(-1260,-756,o),
(-1180,-888,o),
(-1051,-888,cs)
);
},
{
closed = 1;
nodes = (
(-727,-848,o),
(-769,-801,o),
(-769,-726,cs),
(-769,-676,o),
(-734,-574,o),
(-734,-514,cs),
(-734,-425,o),
(-753,-351,o),
(-789,-295,c),
(-757,-242,o),
(-708,-221,o),
(-660,-221,cs),
(-612,-221,o),
(-563,-242,o),
(-531,-295,c),
(-567,-351,o),
(-586,-425,o),
(-586,-514,cs),
(-586,-574,o),
(-551,-676,o),
(-551,-726,cs),
(-551,-801,o),
(-593,-848,o),
(-660,-848,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 3 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 10 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 1 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 0 2 1 0 128 0 10 3 7 10 89 9 8 2 7 5 1 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
103 101 93 91 81 79 35 38 45 44 43 38 20 18 20 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-694,0);
}
);
layerId = m003;
shapes = (
{
closed = 1;
nodes = (
(-1050,-888,o),
(-1005,-877,o),
(-975,-860,c),
(-1001,-678,l),
(-1017,-686,o),
(-1038,-691,o),
(-1054,-691,cs),
(-1143,-691,o),
(-1165,-607,o),
(-1165,-519,cs),
(-1165,-389,o),
(-1113,-317,o),
(-1020,-317,cs),
(-926,-317,o),
(-877,-396,o),
(-877,-523,cs),
(-877,-562,o),
(-883,-607,o),
(-883,-656,cs),
(-883,-802,o),
(-804,-887,o),
(-694,-887,cs),
(-584,-887,o),
(-505,-802,o),
(-505,-656,cs),
(-505,-607,o),
(-511,-562,o),
(-511,-523,cs),
(-511,-396,o),
(-462,-317,o),
(-368,-317,cs),
(-275,-317,o),
(-223,-389,o),
(-223,-519,cs),
(-223,-607,o),
(-245,-691,o),
(-334,-691,cs),
(-350,-691,o),
(-371,-686,o),
(-387,-678,c),
(-413,-860,l),
(-383,-877,o),
(-338,-888,o),
(-291,-888,cs),
(-122,-888,o),
(-28,-754,o),
(-28,-515,cs),
(-28,-263,o),
(-144,-122,o),
(-351,-122,cs),
(-466,-122,o),
(-545,-174,o),
(-588,-258,c),
(-503,-258,l),
(-525,-171,o),
(-607,-122,o),
(-694,-122,cs),
(-781,-122,o),
(-863,-171,o),
(-885,-258,c),
(-800,-258,l),
(-843,-174,o),
(-922,-122,o),
(-1037,-122,cs),
(-1244,-122,o),
(-1360,-263,o),
(-1360,-515,cs),
(-1360,-754,o),
(-1266,-888,o),
(-1097,-888,cs)
);
},
{
closed = 1;
nodes = (
(-721,-709,o),
(-742,-686,o),
(-742,-638,cs),
(-742,-597,o),
(-737,-516,o),
(-737,-459,cs),
(-737,-420,o),
(-742,-308,o),
(-771,-274,c),
(-759,-252,o),
(-719,-236,o),
(-694,-236,cs),
(-669,-236,o),
(-629,-252,o),
(-617,-274,c),
(-646,-308,o),
(-651,-420,o),
(-651,-459,cs),
(-651,-516,o),
(-646,-597,o),
(-646,-638,cs),
(-646,-686,o),
(-667,-709,o),
(-694,-709,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 3 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 10 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 1 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 0 2 1 0 128 0 10 3 7 10 89 9 8 2 7 5 1 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
103 101 93 91 81 79 35 38 45 44 43 38 20 18 20 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
},
{
anchors = (
{
name = _bottom;
pos = (-675,0);
}
);
hints = (
{
horizontal = 1;
origin = (0,69);
target = (0,36);
type = Stem;
},
{
horizontal = 1;
origin = (0,30);
target = (0,63);
type = Stem;
},
{
horizontal = 1;
origin = (0,69);
target = (1,23);
type = Stem;
}
);
layerId = "F0604DE4-03AC-4980-9DDA-35F40FDF1E6E";
shapes = (
{
closed = 1;
nodes = (
(-1045,-888,o),
(-1009,-880,o),
(-984,-868,c),
(-994,-751,l),
(-1014,-759,o),
(-1035,-764,o),
(-1051,-764,cs),
(-1156,-764,o),
(-1186,-686,o),
(-1186,-540,cs),
(-1186,-379,o),
(-1120,-289,o),
(-1016,-289,cs),
(-899,-289,o),
(-853,-371,o),
(-853,-520,cs),
(-853,-579,o),
(-876,-648,o),
(-876,-702,cs),
(-876,-816,o),
(-794,-888,o),
(-675,-888,cs),
(-556,-888,o),
(-474,-816,o),
(-474,-702,cs),
(-474,-648,o),
(-497,-579,o),
(-497,-520,cs),
(-497,-371,o),
(-451,-289,o),
(-334,-289,cs),
(-230,-289,o),
(-164,-379,o),
(-164,-540,cs),
(-164,-686,o),
(-194,-764,o),
(-299,-764,cs),
(-315,-764,o),
(-336,-759,o),
(-356,-751,c),
(-366,-868,l),
(-341,-880,o),
(-305,-888,o),
(-271,-888,cs),
(-119,-888,o),
(-24,-759,o),
(-24,-538,cs),
(-24,-309,o),
(-141,-165,o),
(-317,-165,cs),
(-423,-165,o),
(-505,-209,o),
(-552,-285,c),
(-497,-286,l),
(-529,-197,o),
(-607,-165,o),
(-675,-165,cs),
(-743,-165,o),
(-821,-197,o),
(-853,-286,c),
(-798,-285,l),
(-845,-209,o),
(-927,-165,o),
(-1033,-165,cs),
(-1209,-165,o),
(-1326,-309,o),
(-1326,-538,cs),
(-1326,-759,o),
(-1231,-888,o),
(-1079,-888,cs)
);
},
{
closed = 1;
nodes = (
(-727,-792,o),
(-762,-755,o),
(-762,-691,cs),
(-762,-644,o),
(-739,-556,o),
(-739,-497,cs),
(-739,-434,o),
(-746,-364,o),
(-775,-314,c),
(-749,-279,o),
(-714,-262,o),
(-675,-262,cs),
(-636,-262,o),
(-600,-279,o),
(-575,-314,c),
(-604,-364,o),
(-611,-434,o),
(-611,-497,cs),
(-611,-556,o),
(-588,-644,o),
(-588,-691,cs),
(-588,-755,o),
(-623,-792,o),
(-675,-792,cs)
);
}
);
userData = {
assembly = "MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 3 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 20 values pushed */
77 73 2 10 7 99 97 95 89 87 84 38 29 16 11 10 2 3 2 76 
EIF[ ]	/* EndIf */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
23 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 27 values pushed */
9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 1 3 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
29 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 34 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 2 0 97 6 4 2 0 0 40 0 78 
ELSE[ ]	/* Else */
MPPEM[ ]	/* MeasurePixelPerEm */
PUSHB[ ]	/* 1 value pushed */
45 
LT[ ]	/* LessThan */
IF[ ]	/* If */
NPUSHB[ ]	/* 40 values pushed */
0 1 2 0 2 1 0 128 9 8 2 7 10 5 2 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
ELSE[ ]	/* Else */
NPUSHB[ ]	/* 45 values pushed */
0 1 2 0 2 1 0 128 0 10 3 7 10 89 9 8 2 7 5 1 3 2 7 3 105 11 1 2 1 0 2 89 11 1 2 2 0 97 6 4 2 0 2 0 81 
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
EIF[ ]	/* EndIf */
NPUSHB[ ]	/* 18 values pushed */
103 101 93 91 81 79 35 38 45 44 43 38 20 18 20 12 8 31 
CALL[ ]	/* CallFunction */";
};
width = 0;
}
);
note = uniE00F.blws;
}
